var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/Animal.html",[0,0.195,1,0.284]],["body/interfaces/Animal.html",[0,0.392,1,0.539,2,0.178,3,0.178,4,0.12,5,0.341,6,0.839,7,0.82,8,0.696,9,0.148,10,0.377,11,1.545,12,0.858,13,1.545,14,0.595,15,0.305,16,0.028,17,0.712,18,1.247,19,1.247,20,0.647,21,0.249,22,1.083,23,0.659,24,1.247,25,1.163,26,0.415,27,0.9,28,0.415,29,0.306,30,1.163,31,0.839,32,0.647,33,0.472,34,0.9,35,1.247,36,0.9,37,0.508,38,0.377,39,0.431,40,0.727,41,0.542,42,1.334,43,0.805,44,1.163,45,0.415,46,0.652,47,0.9,48,0.782,49,1.247,50,1.247,51,0.9,52,1.083,53,1.431,54,0.574,55,1.247,56,1.247,57,0.998,58,0.487,59,0.525,60,0.9,61,0.377,62,1.247,63,0.9,64,0.9,65,0.9,66,1.431,67,0.9,68,0.9,69,1.247,70,0.696,71,1.247,72,1.623,73,1.605,74,1.545,75,1.247,76,0.415,77,0.599,78,0.9,79,0.9,80,0.341,81,1.545,82,0.459,83,0.341,84,0.9,85,0.9,86,1.247,87,0.9,88,0.9,89,1.247,90,1.083,91,0.9,92,0.9,93,0.9,94,0.574,95,0.341,96,0.728,97,0.415,98,0.472,99,0.9,100,0.9,101,0.9,102,0.9,103,0.9,104,0.341,105,0.415,106,0.415,107,0.415,108,0.017,109,0.017]],["title/interfaces/AnimalApiCredentials.html",[0,0.195,22,0.814]],["body/interfaces/AnimalApiCredentials.html",[0,0.393,1,0.492,2,0.179,3,0.179,4,0.12,5,0.343,6,0.845,7,0.809,8,0.697,9,0.149,10,0.379,11,0.907,12,0.832,13,0.907,14,0.594,15,0.284,16,0.028,17,0.662,18,0.907,19,0.907,20,0.602,21,0.249,22,1.248,23,0.749,24,1.55,25,1.445,26,0.714,27,1.254,28,0.714,29,0.308,30,1.169,31,0.845,32,0.649,33,0.475,34,0.907,35,1.254,36,0.907,37,0.509,38,0.379,39,0.432,40,0.728,41,0.544,42,1.339,43,0.809,44,1.169,45,0.418,46,0.653,47,0.907,48,0.788,49,1.254,50,1.254,51,0.907,52,1.089,53,1.437,54,0.577,55,1.254,56,1.254,57,1.001,58,0.488,59,0.527,60,0.907,61,0.38,62,1.254,63,0.907,64,0.907,65,0.907,66,1.437,67,0.907,68,0.907,69,1.254,70,0.697,71,1.254,72,1.627,73,1.608,74,1.55,75,1.254,76,0.418,77,0.602,78,0.907,79,0.907,80,0.343,81,1.55,82,0.46,83,0.343,84,0.907,85,0.907,86,1.254,87,0.907,88,0.907,89,1.254,90,1.089,91,0.907,92,0.907,93,0.907,94,0.577,95,0.343,96,0.733,97,0.418,98,0.475,99,0.907,100,0.907,101,0.907,102,0.907,103,0.907,104,0.343,105,0.418,106,0.418,107,0.418,108,0.018,109,0.018]],["title/modules/AnimalSDKModule.html",[110,1.99,111,2.194]],["body/modules/AnimalSDKModule.html",[1,0.54,2,0.259,3,0.259,4,0.174,16,0.028,21,0.252,29,0.542,108,0.022,109,0.022,110,2.787,111,4.019,112,4.635,113,2.2,114,5.113,115,5.63,116,1.619,117,5.63,118,4.635,119,1.833,120,1.833,121,5.63,122,2.11,123,6.063,124,5.63,125,6.063,126,5.63,127,6.063,128,5.63,129,5.63,130,5.63,131,3.43,132,0.304,133,2.787,134,4.635,135,1.14,136,4.487,137,4.635,138,1.737]],["title/injectables/AnimalSDKService.html",[119,1.078,139,1.078]],["body/injectables/AnimalSDKService.html",[0,0.26,1,0.553,2,0.139,3,0.139,4,0.093,5,0.646,7,0.736,8,0.395,9,0.116,10,0.316,12,0.323,14,0.524,15,0.324,16,0.028,17,0.573,20,0.617,21,0.23,23,0.736,26,0.323,28,0.323,29,0.469,32,0.577,33,0.471,37,0.536,38,0.417,39,0.357,40,0.605,41,0.266,45,0.323,46,0.664,54,0.48,58,0.355,59,0.239,61,0.294,70,0.656,76,0.48,77,0.437,80,0.395,82,0.278,83,0.558,94,0.635,95,0.266,97,0.323,98,0.266,104,0.558,105,0.635,106,0.635,107,0.323,108,0.015,109,0.015,113,1.585,116,0.866,119,1.2,120,0.807,122,0.929,132,0.37,135,1.629,138,1.381,139,1.585,140,0.866,141,1.743,142,2.195,143,1.929,144,1.96,145,1.484,146,1.96,147,1.364,148,2.48,149,2.069,150,3.685,151,1.585,152,1.642,153,2.48,154,1.119,155,1.7,156,1.888,157,2.48,158,2.48,159,1.7,160,2.48,161,1.7,162,2.48,163,1.7,164,2.48,165,1.7,166,2.48,167,0.999,168,0.999,169,1.043,170,0.753,171,0.999,172,1.564,173,1.4,174,0.929,175,1.775,176,0.999,177,0.999,178,2.173,179,0.866,180,0.807,181,1.949,182,1.432,183,1.648,184,2.095,185,1.771,186,1.119,187,0.999,188,1.287,189,1.119,190,1.381,191,1.381,192,1.903,193,0.999,194,0.999,195,0.999,196,0.999,197,1.96,198,0.999,199,0.999,200,1.771,201,1.484,202,0.999,203,0.999,204,0.999,205,0.999,206,0.999,207,1.335,208,2.293,209,0.999,210,1.775,211,1.824,212,1.775,213,1.771,214,0.999,215,1.484,216,0.999,217,0.999,218,1.771,219,0.999,220,0.999,221,0.999,222,0.999,223,0.999,224,0.999,225,1.771,226,1.949,227,0.999,228,1.432,229,0.807,230,0.999,231,1.484,232,0.999,233,1.287,234,0.999,235,0.999,236,0.999,237,0.999,238,0.999,239,1.335,240,0.999,241,0.999,242,0.999,243,1.484,244,1.484,245,0.999,246,1.484,247,1.771,248,1.7,249,2.095,250,1.484,251,1.484,252,1.484,253,0.999,254,0.999,255,0.999,256,0.999,257,0.999,258,0.999,259,0.999,260,1.484,261,0.999,262,0.999,263,0.999,264,0.999,265,0.999,266,1.484,267,0.999,268,0.999,269,0.999,270,1.484,271,0.866,272,0.999,273,0.999,274,0.999,275,0.999,276,0.999,277,0.999,278,0.999,279,1.96,280,1.771,281,1.484,282,1.771,283,0.999,284,1.96,285,1.2,286,0.999,287,0.999,288,0.999,289,0.999,290,0.999,291,0.999,292,0.999,293,0.999,294,0.999,295,0.999,296,0.999,297,0.999,298,0.999,299,0.999,300,0.999,301,0.999,302,0.999,303,0.999,304,0.999,305,0.999,306,0.999,307,0.999]],["title/interfaces/AnimalSdkConfig.html",[0,0.195,29,0.319]],["body/interfaces/AnimalSdkConfig.html",[0,0.393,1,0.492,2,0.179,3,0.179,4,0.12,5,0.343,6,0.844,7,0.809,8,0.691,9,0.149,10,0.379,11,0.905,12,0.831,13,0.905,14,0.593,15,0.284,16,0.028,17,0.661,18,0.905,19,0.905,20,0.601,21,0.249,22,1.345,23,0.713,24,1.252,25,1.167,26,0.417,27,0.905,28,0.417,29,0.426,30,1.568,31,1.167,32,0.704,33,0.586,34,1.252,35,1.682,36,1.252,37,0.509,38,0.379,39,0.432,40,0.728,41,0.544,42,1.338,43,0.808,44,1.167,45,0.417,46,0.653,47,0.905,48,0.786,49,1.252,50,1.252,51,0.905,52,1.088,53,1.436,54,0.577,55,1.252,56,1.252,57,1.001,58,0.488,59,0.527,60,0.905,61,0.379,62,1.252,63,0.905,64,0.905,65,0.905,66,1.436,67,0.905,68,0.905,69,1.252,70,0.697,71,1.252,72,1.626,73,1.607,74,1.549,75,1.252,76,0.417,77,0.601,78,0.905,79,0.905,80,0.343,81,1.549,82,0.459,83,0.343,84,0.905,85,0.905,86,1.252,87,0.905,88,0.905,89,1.252,90,1.088,91,0.905,92,0.905,93,0.905,94,0.577,95,0.343,96,0.732,97,0.417,98,0.474,99,0.905,100,0.905,101,0.905,102,0.905,103,0.905,104,0.343,105,0.417,106,0.417,107,0.417,108,0.018,109,0.018]],["title/classes/AnimalService.html",[132,0.217,155,1.156]],["body/classes/AnimalService.html",[0,0.255,1,0.527,2,0.134,3,0.134,4,0.09,5,0.514,7,0.749,8,0.514,9,0.112,10,0.308,12,0.625,14,0.546,15,0.321,16,0.028,17,0.563,20,0.639,21,0.228,23,0.749,26,0.313,28,0.313,29,0.346,32,0.568,33,0.463,37,0.559,38,0.461,39,0.392,40,0.514,41,0.257,43,0.658,45,0.313,46,0.63,54,0.469,58,0.346,59,0.231,61,0.285,70,0.616,76,0.469,77,0.427,80,0.386,82,0.271,83,0.386,94,0.669,95,0.257,97,0.313,98,0.257,104,0.599,105,0.669,106,0.625,107,0.313,108,0.014,109,0.014,113,1.56,116,0.839,119,0.782,120,0.782,122,0.9,132,0.376,135,1.638,138,0.9,139,1.405,140,0.839,141,1.704,142,1.929,143,1.818,144,0.967,145,1.449,146,0.967,147,1.321,149,2.051,151,1.87,152,1.806,154,1.092,155,1.506,156,1.947,159,1.256,161,1.256,163,1.256,165,1.256,167,0.967,168,0.967,169,1.019,170,0.729,171,0.967,172,1.55,173,1.39,174,0.9,175,1.87,176,0.967,177,0.967,178,2.153,179,0.839,180,1.171,181,1.923,182,1.754,183,1.617,184,2.066,185,1.737,186,1.092,187,1.737,188,1.256,189,1.092,190,1.348,191,1.348,192,2.172,193,0.967,194,0.967,195,0.967,196,0.967,197,1.929,198,0.967,199,0.967,200,1.929,201,1.449,202,0.967,203,1.449,204,0.967,205,0.967,206,0.967,207,1.558,208,2.305,209,1.449,210,1.818,211,1.923,212,1.912,213,1.737,214,0.967,215,1.449,216,0.967,217,0.967,218,1.737,219,0.967,220,0.967,221,0.967,222,0.967,223,0.967,224,1.449,225,2.066,226,2.019,227,0.967,228,1.405,229,0.782,230,0.967,231,1.449,232,0.967,233,1.256,234,0.967,235,0.967,236,0.967,237,0.967,238,0.967,239,1.31,240,0.967,241,0.967,242,0.967,243,1.449,244,1.449,245,0.967,246,1.449,247,1.737,248,1.881,249,2.313,250,1.449,251,1.449,252,1.449,253,0.967,254,0.967,255,0.967,256,0.967,257,0.967,258,0.967,259,0.967,260,1.449,261,0.967,262,0.967,263,0.967,264,0.967,265,0.967,266,1.449,267,0.967,268,0.967,269,0.967,270,1.449,271,0.839,272,1.929,273,0.967,274,0.967,275,0.967,276,0.967,277,0.967,278,0.967,279,1.929,280,1.737,281,1.449,282,1.737,283,0.967,284,1.929,285,1.171,286,0.967,287,0.967,288,0.967,289,0.967,290,0.967,291,0.967,292,0.967,293,0.967,294,0.967,295,0.967,296,0.967,297,0.967,298,0.967,299,0.967,300,0.967,301,0.967,302,0.967,303,0.967,304,0.967,305,0.967,306,0.967,307,0.967,308,1.978,309,3.597,310,3.238,311,1.444,312,1.444,313,1.444,314,2.401,315,1.444,316,1.123,317,1.444,318,0.967,319,1.444]],["title/interfaces/AnimalServiceOptions.html",[0,0.195,271,1.156]],["body/interfaces/AnimalServiceOptions.html",[0,0.298,1,0.538,2,0.149,3,0.149,4,0.1,5,0.286,7,0.772,8,0.417,14,0.532,16,0.028,17,0.598,20,0.635,21,0.234,23,0.657,26,0.348,28,0.348,29,0.374,32,0.598,33,0.492,37,0.544,38,0.432,39,0.367,40,0.54,41,0.286,45,0.348,46,0.647,54,0.507,58,0.374,59,0.257,61,0.316,70,0.635,76,0.507,77,0.461,80,0.417,82,0.293,83,0.417,94,0.657,95,0.286,97,0.348,98,0.286,104,0.574,105,0.657,106,0.657,107,0.348,108,0.015,109,0.015,113,1.641,116,0.931,119,0.868,120,0.868,122,0.999,132,0.379,135,1.637,138,0.999,139,1.493,140,0.931,141,1.659,142,2.03,143,1.744,144,1.073,146,1.073,151,1.493,152,1.635,154,0.809,155,1.357,156,1.821,159,1.357,161,1.357,163,1.357,165,1.357,167,1.073,168,1.073,169,1.1,170,0.809,171,1.073,172,1.593,173,1.422,174,0.999,175,1.821,176,1.073,177,1.073,178,2.218,179,0.931,180,0.868,181,2.008,182,1.493,183,1.719,184,2.158,185,1.847,186,1.18,187,1.073,188,1.357,189,1.18,190,1.456,191,1.456,192,1.953,193,1.073,194,1.073,195,1.073,196,1.073,197,2.03,198,1.073,199,1.073,200,1.847,201,1.565,202,1.073,203,1.073,204,1.073,205,1.073,206,1.073,207,1.392,208,2.329,209,1.073,210,1.821,211,1.889,212,1.821,213,1.847,214,1.073,215,1.565,216,1.073,217,1.073,218,1.847,219,1.073,220,1.073,221,1.073,222,1.073,223,1.073,224,1.073,225,1.847,226,2.008,227,1.073,228,1.493,229,0.868,230,1.073,231,1.565,232,1.073,233,1.357,234,1.073,235,1.073,236,1.073,237,1.073,238,1.073,239,1.392,240,1.073,241,1.073,242,1.073,243,1.565,244,1.565,245,1.073,246,1.565,247,1.847,248,1.871,249,2.158,250,1.565,251,1.565,252,1.565,253,1.073,254,1.073,255,1.073,256,1.073,257,1.073,258,1.073,259,1.073,260,1.565,261,1.073,262,1.073,263,1.073,264,1.073,265,1.073,266,1.565,267,1.073,268,1.073,269,1.073,270,1.565,271,1.357,272,1.073,273,1.073,274,1.073,275,1.073,276,1.073,277,1.073,278,1.073,279,2.03,280,1.847,281,1.565,282,1.847,283,1.073,284,2.03,285,1.265,286,1.073,287,1.073,288,1.073,289,1.073,290,1.073,291,1.073,292,1.073,293,1.073,294,1.073,295,1.073,296,1.073,297,1.073,298,1.073,299,1.073,300,1.073,301,1.073,302,1.073,303,1.073,304,1.073,305,1.073,306,1.073,307,1.073]],["title/classes/ApiStorage.html",[132,0.217,169,0.937]],["body/classes/ApiStorage.html",[0,0.259,2,0.246,3,0.246,4,0.165,9,0.205,12,0.807,14,0.588,15,0.346,16,0.028,21,0.233,37,0.466,38,0.53,39,0.406,57,1.256,58,0.524,59,0.422,82,0.331,96,1.005,108,0.022,109,0.022,132,0.388,133,4.093,135,1.595,141,1.634,145,2.192,149,2.161,151,2.015,152,1.752,154,1.653,169,1.542,170,1.653,172,1.437,173,1.005,186,1.797,207,1.797,228,1.773,229,1.429,239,1.333,320,3.825,321,2.638,322,5.444,323,5.444,324,5.444,325,4.028,326,4.388,327,3.898,328,4.028,329,4.388,330,4.028,331,4.388,332,4.028,333,4.388,334,3.247,335,2.909,336,2.909,337,3.247,338,3.247,339,3.247,340,3.247,341,3.247,342,3.247,343,3.247,344,3.247]],["title/interfaces/AskQuestion.html",[0,0.195,80,0.355]],["body/interfaces/AskQuestion.html",[0,0.392,1,0.491,2,0.178,3,0.178,4,0.12,5,0.341,6,0.839,7,0.808,8,0.69,9,0.148,10,0.377,11,0.9,12,0.858,13,0.9,14,0.595,15,0.305,16,0.028,17,0.659,18,0.9,19,0.9,20,0.599,21,0.249,22,1.083,23,0.659,24,1.247,25,1.162,26,0.414,27,0.9,28,0.414,29,0.306,30,1.162,31,0.839,32,0.647,33,0.472,34,0.9,35,1.247,36,0.9,37,0.508,38,0.377,39,0.431,40,0.727,41,0.542,42,1.334,43,0.805,44,1.162,45,0.414,46,0.652,47,0.9,48,0.781,49,1.247,50,1.247,51,0.9,52,1.083,53,1.431,54,0.574,55,1.247,56,1.247,57,0.997,58,0.486,59,0.525,60,0.9,61,0.377,62,1.247,63,0.9,64,0.9,65,0.9,66,1.431,67,0.9,68,0.9,69,1.247,70,0.709,71,1.431,72,1.721,73,1.681,74,1.754,75,1.622,76,0.414,77,0.599,78,0.9,79,0.9,80,0.472,81,1.545,82,0.459,83,0.341,84,0.9,85,0.9,86,1.247,87,0.9,88,0.9,89,1.247,90,1.083,91,0.9,92,0.9,93,0.9,94,0.574,95,0.341,96,0.727,97,0.414,98,0.472,99,0.9,100,0.9,101,0.9,102,0.9,103,0.9,104,0.341,105,0.414,106,0.414,107,0.414,108,0.017,109,0.017]],["title/interfaces/BasicMonth.html",[0,0.195,98,0.355]],["body/interfaces/BasicMonth.html",[0,0.392,1,0.491,2,0.177,3,0.177,4,0.119,5,0.34,6,0.837,7,0.82,8,0.696,9,0.148,10,0.377,11,0.898,12,0.83,13,0.898,14,0.592,15,0.305,16,0.028,17,0.658,18,0.898,19,0.898,20,0.599,21,0.249,22,1.082,23,0.658,24,1.245,25,1.161,26,0.414,27,0.898,28,0.414,29,0.305,30,1.161,31,0.837,32,0.646,33,0.472,34,0.898,35,1.245,36,0.898,37,0.508,38,0.377,39,0.442,40,0.734,41,0.614,42,1.333,43,0.804,44,1.161,45,0.414,46,0.674,47,0.898,48,0.78,49,1.245,50,1.245,51,0.898,52,1.082,53,1.544,54,0.573,55,1.245,56,1.429,57,1.076,58,0.57,59,0.525,60,0.898,61,0.376,62,1.245,63,0.898,64,0.898,65,0.898,66,1.544,67,0.898,68,0.898,69,1.245,70,0.696,71,1.245,72,1.621,73,1.604,74,1.544,75,1.245,76,0.414,77,0.599,78,0.898,79,0.898,80,0.34,81,1.544,82,0.458,83,0.34,84,0.898,85,0.898,86,1.245,87,0.898,88,0.898,89,1.245,90,1.082,91,0.898,92,0.898,93,0.898,94,0.573,95,0.34,96,0.726,97,0.414,98,0.541,99,1.245,100,1.245,101,0.898,102,0.898,103,0.898,104,0.34,105,0.414,106,0.414,107,0.414,108,0.017,109,0.017]],["title/interfaces/BasicPage.html",[0,0.195,41,0.355]],["body/interfaces/BasicPage.html",[0,0.391,1,0.485,2,0.172,3,0.172,4,0.116,5,0.33,6,0.813,7,0.814,8,0.692,9,0.144,10,0.369,11,0.872,12,0.825,13,0.872,14,0.596,15,0.349,16,0.028,17,0.648,18,0.872,19,0.872,20,0.589,21,0.248,22,1.059,23,0.648,24,1.22,25,1.137,26,0.401,27,0.872,28,0.401,29,0.296,30,1.137,31,0.813,32,0.638,33,0.462,34,0.872,35,1.22,36,0.872,37,0.503,38,0.369,39,0.429,40,0.735,41,0.577,42,1.59,43,1.073,44,1.549,45,0.562,46,0.659,47,1.524,48,1.059,49,1.407,50,1.407,51,1.524,52,1.323,53,1.604,54,0.648,55,1.604,56,1.407,57,1.062,58,0.565,59,0.518,60,0.872,61,0.365,62,1.22,63,0.872,64,0.872,65,0.872,66,1.407,67,0.872,68,0.872,69,1.22,70,0.692,71,1.22,72,1.604,73,1.59,74,1.524,75,1.22,76,0.401,77,0.589,78,0.872,79,0.872,80,0.33,81,1.524,82,0.455,83,0.33,84,0.872,85,0.872,86,1.22,87,0.872,88,0.872,89,1.22,90,1.059,91,0.872,92,0.872,93,0.872,94,0.562,95,0.33,96,0.704,97,0.401,98,0.462,99,0.872,100,0.872,101,0.872,102,0.872,103,0.872,104,0.33,105,0.401,106,0.401,107,0.401,108,0.017,109,0.017]],["title/interfaces/Identifiable.html",[0,0.195,8,0.355]],["body/interfaces/Identifiable.html",[0,0.393,1,0.494,2,0.181,3,0.181,4,0.122,5,0.347,6,0.854,7,0.811,8,0.703,9,0.151,10,0.382,11,0.916,12,0.833,13,0.916,14,0.592,15,0.25,16,0.028,17,0.665,18,0.916,19,0.916,20,0.605,21,0.25,22,1.097,23,0.665,24,1.263,25,1.177,26,0.422,27,0.916,28,0.422,29,0.312,30,1.177,31,0.854,32,0.652,33,0.478,34,0.916,35,1.263,36,0.916,37,0.523,38,0.494,39,0.437,40,0.728,41,0.547,42,1.347,43,0.815,44,1.177,45,0.422,46,0.655,47,0.916,48,0.796,49,1.263,50,1.263,51,0.916,52,1.097,53,1.445,54,0.581,55,1.263,56,1.263,57,1.007,58,0.491,59,0.529,60,0.916,61,0.384,62,1.263,63,0.916,64,0.916,65,0.916,66,1.445,67,0.916,68,0.916,69,1.263,70,0.698,71,1.263,72,1.633,73,1.613,74,1.557,75,1.263,76,0.422,77,0.605,78,0.916,79,0.916,80,0.347,81,1.557,82,0.461,83,0.347,84,0.916,85,0.916,86,1.263,87,0.916,88,0.916,89,1.263,90,1.097,91,0.916,92,0.916,93,0.916,94,0.581,95,0.347,96,0.741,97,0.422,98,0.478,99,0.916,100,0.916,101,0.916,102,0.916,103,0.916,104,0.347,105,0.422,106,0.422,107,0.422,108,0.018,109,0.018]],["title/interfaces/MenuItem.html",[0,0.195,83,0.355]],["body/interfaces/MenuItem.html",[0,0.392,1,0.49,2,0.177,3,0.177,4,0.119,5,0.34,6,0.836,7,0.82,8,0.701,9,0.148,10,0.376,11,0.897,12,0.857,13,0.897,14,0.592,15,0.305,16,0.028,17,0.658,18,0.897,19,0.897,20,0.598,21,0.249,22,1.08,23,0.658,24,1.244,25,1.16,26,0.413,27,0.897,28,0.413,29,0.305,30,1.16,31,0.836,32,0.646,33,0.471,34,0.897,35,1.244,36,0.897,37,0.507,38,0.376,39,0.439,40,0.729,41,0.541,42,1.331,43,0.803,44,1.16,45,0.413,46,0.651,47,0.897,48,0.779,49,1.244,50,1.244,51,0.897,52,1.08,53,1.428,54,0.573,55,1.244,56,1.244,57,0.995,58,0.486,59,0.524,60,0.897,61,0.376,62,1.244,63,0.897,64,0.897,65,0.897,66,1.428,67,0.897,68,0.897,69,1.244,70,0.695,71,1.244,72,1.62,73,1.603,74,1.543,75,1.244,76,0.413,77,0.598,78,0.897,79,0.897,80,0.34,81,1.72,82,0.48,83,0.471,84,1.244,85,1.543,86,1.677,87,1.244,88,1.244,89,1.244,90,1.08,91,0.897,92,0.897,93,0.897,94,0.573,95,0.34,96,0.725,97,0.413,98,0.471,99,0.897,100,0.897,101,0.897,102,0.897,103,0.897,104,0.34,105,0.413,106,0.413,107,0.413,108,0.017,109,0.017]],["title/classes/MenuItemService.html",[132,0.217,159,1.156]],["body/classes/MenuItemService.html",[0,0.259,1,0.53,2,0.138,3,0.138,4,0.093,5,0.264,7,0.755,8,0.52,9,0.115,10,0.314,12,0.571,14,0.54,15,0.304,16,0.028,17,0.571,20,0.645,21,0.23,23,0.734,26,0.321,28,0.321,29,0.353,32,0.575,33,0.47,37,0.555,38,0.466,39,0.395,40,0.52,41,0.264,43,0.67,45,0.321,46,0.634,54,0.478,58,0.353,59,0.237,61,0.292,70,0.621,76,0.478,77,0.435,80,0.393,82,0.277,83,0.393,94,0.676,95,0.264,97,0.321,98,0.264,104,0.604,105,0.676,106,0.633,107,0.321,108,0.015,109,0.015,113,1.58,116,0.861,119,0.802,120,0.802,122,0.924,132,0.379,135,1.638,138,0.924,139,1.426,140,0.861,141,1.691,142,1.954,143,1.834,144,0.992,145,1.477,146,0.992,149,1.899,151,1.834,152,1.77,154,1.114,155,1.281,156,1.884,159,1.53,161,1.281,163,1.281,165,1.281,167,0.992,168,0.992,169,1.039,170,0.748,171,0.992,172,1.561,173,1.398,174,0.924,175,1.884,176,0.992,177,0.992,178,2.169,179,0.861,180,1.194,181,1.944,182,1.58,183,1.642,184,2.089,185,1.764,186,1.114,187,1.764,188,1.281,189,1.114,190,1.375,191,1.375,192,2.183,193,0.992,194,0.992,195,0.992,196,0.992,197,1.954,198,0.992,199,0.992,200,1.764,201,1.477,202,0.992,203,1.477,204,0.992,205,0.992,206,0.992,207,1.575,208,2.318,209,1.477,210,1.834,211,1.944,212,1.884,213,1.764,214,0.992,215,1.477,216,0.992,217,0.992,218,1.764,219,0.992,220,0.992,221,0.992,222,0.992,223,0.992,224,1.477,225,2.089,226,2.038,227,0.992,228,1.426,229,0.802,230,0.992,231,1.477,232,0.992,233,1.281,234,0.992,235,0.992,236,0.992,237,0.992,238,0.992,239,1.33,240,0.992,241,0.992,242,0.992,243,1.477,244,1.477,245,0.992,246,1.477,247,1.764,248,1.695,249,2.089,250,1.477,251,1.477,252,1.477,253,0.992,254,0.992,255,0.992,256,0.992,257,0.992,258,0.992,259,0.992,260,1.477,261,0.992,262,0.992,263,0.992,264,0.992,265,0.992,266,1.477,267,0.992,268,0.992,269,0.992,270,1.477,271,0.861,272,0.992,273,0.992,274,0.992,275,0.992,276,0.992,277,0.992,278,0.992,279,1.954,280,1.764,281,1.477,282,1.764,283,0.992,284,1.954,285,1.194,286,0.992,287,0.992,288,0.992,289,0.992,290,0.992,291,0.992,292,0.992,293,0.992,294,0.992,295,0.992,296,0.992,297,0.992,298,0.992,299,0.992,300,0.992,301,0.992,302,0.992,303,0.992,304,0.992,305,0.992,306,0.992,307,0.992,308,2.017,310,3.269,311,1.481,312,1.481,313,1.481,315,1.481,316,1.152,317,1.481,318,0.992,319,1.481]],["title/classes/ModelService.html",[132,0.217,192,1.156]],["body/classes/ModelService.html",[0,0.256,1,0.528,2,0.135,3,0.135,4,0.091,5,0.652,7,0.73,8,0.516,9,0.113,10,0.31,12,0.627,14,0.547,15,0.313,16,0.028,17,0.565,20,0.641,21,0.229,23,0.751,26,0.316,28,0.316,29,0.348,32,0.57,33,0.465,37,0.559,38,0.463,39,0.393,40,0.516,41,0.26,43,0.661,45,0.316,46,0.631,54,0.472,58,0.348,59,0.233,61,0.287,70,0.617,76,0.472,77,0.429,80,0.388,82,0.273,83,0.388,94,0.671,95,0.26,97,0.316,98,0.26,104,0.6,105,0.671,106,0.627,107,0.316,108,0.014,109,0.014,113,1.566,116,0.845,119,0.788,120,0.788,122,0.907,132,0.377,135,1.635,138,0.907,139,1.411,140,0.845,141,1.686,142,1.937,143,1.823,144,0.975,145,1.457,146,0.975,147,1.331,149,2.093,151,1.874,152,1.808,154,1.099,155,1.264,156,1.951,159,1.264,161,1.264,163,1.264,165,1.264,167,0.975,168,0.975,169,1.025,170,0.735,171,0.975,172,1.554,173,1.392,174,0.907,175,1.951,176,0.975,177,0.975,178,2.158,179,0.845,180,1.178,181,1.93,182,1.566,183,1.625,184,2.176,185,1.746,186,1.099,187,1.746,188,1.264,189,1.099,190,1.356,191,1.356,192,1.955,193,1.457,194,0.975,195,1.457,196,0.975,197,1.937,198,0.975,199,0.975,200,1.937,201,1.457,202,0.975,203,1.457,204,0.975,205,0.975,206,0.975,207,1.563,208,2.309,209,1.457,210,1.823,211,1.93,212,1.874,213,1.746,214,0.975,215,1.457,216,0.975,217,0.975,218,1.746,219,0.975,220,0.975,221,0.975,222,0.975,223,0.975,224,1.457,225,2.073,226,2.025,227,0.975,228,1.411,229,0.788,230,0.975,231,1.457,232,0.975,233,1.264,234,0.975,235,0.975,236,0.975,237,0.975,238,0.975,239,1.316,240,0.975,241,0.975,242,0.975,243,1.457,244,1.457,245,0.975,246,1.457,247,1.746,248,1.68,249,2.073,250,1.457,251,1.457,252,1.457,253,0.975,254,0.975,255,0.975,256,0.975,257,0.975,258,0.975,259,0.975,260,1.457,261,0.975,262,0.975,263,0.975,264,0.975,265,0.975,266,1.457,267,0.975,268,0.975,269,0.975,270,1.457,271,0.845,272,0.975,273,0.975,274,0.975,275,0.975,276,0.975,277,0.975,278,0.975,279,1.937,280,1.746,281,1.457,282,1.746,283,0.975,284,1.937,285,1.178,286,0.975,287,0.975,288,0.975,289,0.975,290,0.975,291,0.975,292,0.975,293,0.975,294,0.975,295,0.975,296,0.975,297,0.975,298,0.975,299,0.975,300,0.975,301,0.975,302,0.975,303,0.975,304,0.975,305,0.975,306,0.975,307,0.975,308,1.99,316,1.132,318,0.975,345,3.619,346,2.42,347,2.42,348,2.42,349,2.42,350,2.42,351,2.42,352,2.42,353,2.42,354,2.42,355,2.42,356,2.42,357,2.42]],["title/interfaces/ModelServiceOptions.html",[0,0.195,175,1.078]],["body/interfaces/ModelServiceOptions.html",[0,0.293,1,0.535,2,0.144,3,0.144,4,0.097,5,0.276,7,0.745,8,0.406,9,0.12,10,0.325,14,0.545,15,0.277,16,0.028,17,0.586,20,0.627,21,0.232,23,0.647,26,0.336,28,0.336,29,0.365,32,0.678,33,0.482,37,0.545,38,0.425,39,0.362,40,0.532,41,0.276,45,0.336,46,0.642,54,0.494,58,0.365,59,0.248,61,0.306,70,0.629,76,0.494,77,0.45,80,0.406,82,0.286,83,0.406,94,0.647,95,0.276,97,0.336,98,0.276,104,0.567,105,0.647,106,0.647,107,0.494,108,0.015,109,0.015,113,1.615,116,0.9,119,0.839,120,0.839,122,0.966,132,0.375,135,1.631,138,0.966,139,1.464,140,0.9,141,1.648,142,1.997,143,1.721,144,1.038,146,1.038,151,1.464,152,1.747,154,0.782,155,1.324,156,1.799,159,1.324,161,1.324,163,1.324,165,1.324,167,1.038,168,1.038,169,1.273,170,0.782,171,1.038,172,1.58,173,1.412,174,0.966,175,1.86,176,1.527,177,1.527,178,2.363,179,1.57,180,1.234,181,2.197,182,1.948,183,1.981,184,2.226,185,2.226,186,1.366,187,1.997,188,1.324,189,1.151,190,1.421,191,1.421,192,1.93,193,1.038,194,1.038,195,1.038,196,1.038,197,1.997,198,1.038,199,1.038,200,1.811,201,1.527,202,1.038,203,1.038,204,1.038,205,1.038,206,1.038,207,1.366,208,2.312,209,1.038,210,1.799,211,1.859,212,1.799,213,1.811,214,1.038,215,1.527,216,1.038,217,1.038,218,1.811,219,1.038,220,1.038,221,1.038,222,1.038,223,1.038,224,1.038,225,1.811,226,1.981,227,1.038,228,1.464,229,0.839,230,1.038,231,1.527,232,1.038,233,1.324,234,1.038,235,1.038,236,1.038,237,1.038,238,1.038,239,1.366,240,1.038,241,1.038,242,1.038,243,1.527,244,1.527,245,1.038,246,1.527,247,1.811,248,1.732,249,2.128,250,1.527,251,1.527,252,1.527,253,1.038,254,1.038,255,1.038,256,1.038,257,1.038,258,1.038,259,1.038,260,1.527,261,1.038,262,1.038,263,1.038,264,1.038,265,1.038,266,1.527,267,1.038,268,1.038,269,1.038,270,1.527,271,0.9,272,1.038,273,1.038,274,1.038,275,1.038,276,1.038,277,1.038,278,1.038,279,1.997,280,1.811,281,1.527,282,1.811,283,1.038,284,1.997,285,1.234,286,1.038,287,1.038,288,1.038,289,1.038,290,1.038,291,1.038,292,1.038,293,1.038,294,1.038,295,1.038,296,1.038,297,1.038,298,1.038,299,1.038,300,1.038,301,1.038,302,1.038,303,1.038,304,1.038,305,1.038,306,1.038,307,1.038]],["title/interfaces/Month.html",[0,0.195,46,0.355]],["body/interfaces/Month.html",[0,0.393,1,0.509,2,0.179,3,0.179,4,0.12,5,0.343,6,0.844,7,0.821,8,0.697,9,0.149,10,0.379,11,0.905,12,0.859,13,0.905,14,0.593,15,0.284,16,0.028,17,0.661,18,0.905,19,0.905,20,0.601,21,0.249,22,1.088,23,0.661,24,1.252,25,1.167,26,0.417,27,0.905,28,0.417,29,0.308,30,1.167,31,0.844,32,0.649,33,0.474,34,0.905,35,1.252,36,0.905,37,0.509,38,0.379,39,0.436,40,0.729,41,0.544,42,1.444,43,0.808,44,1.167,45,0.417,46,0.684,47,0.905,48,0.786,49,1.252,50,1.252,51,0.905,52,1.088,53,1.436,54,0.577,55,1.252,56,1.252,57,1.001,58,0.488,59,0.527,60,0.905,61,0.379,62,1.252,63,0.905,64,0.905,65,0.905,66,1.436,67,0.905,68,0.905,69,1.252,70,0.697,71,1.252,72,1.626,73,1.607,74,1.549,75,1.252,76,0.417,77,0.601,78,0.905,79,0.905,80,0.343,81,1.549,82,0.459,83,0.343,84,0.905,85,0.905,86,1.252,87,0.905,88,0.905,89,1.252,90,1.088,91,0.905,92,0.905,93,0.905,94,0.577,95,0.343,96,0.732,97,0.417,98,0.544,99,0.905,100,0.905,101,1.252,102,1.549,103,0.905,104,0.343,105,0.417,106,0.417,107,0.417,108,0.018,109,0.018]],["title/classes/MonthService.html",[132,0.217,161,1.156]],["body/classes/MonthService.html",[0,0.249,1,0.529,2,0.129,3,0.129,4,0.087,5,0.569,7,0.74,8,0.504,9,0.108,10,0.3,12,0.692,14,0.543,15,0.331,16,0.028,17,0.719,20,0.654,21,0.226,23,0.74,26,0.301,28,0.301,29,0.337,32,0.557,33,0.452,37,0.556,38,0.455,39,0.4,40,0.504,41,0.248,43,0.771,45,0.301,46,0.654,54,0.456,58,0.337,59,0.223,61,0.274,70,0.609,76,0.456,77,0.415,80,0.375,82,0.264,83,0.375,94,0.692,95,0.248,97,0.301,98,0.248,104,0.623,105,0.692,106,0.658,107,0.301,108,0.014,109,0.014,113,1.53,116,0.807,119,0.753,120,0.753,122,0.866,132,0.372,135,1.644,138,0.866,139,1.373,140,0.807,141,1.713,142,1.893,143,1.892,144,0.931,145,1.408,146,0.931,147,1.271,149,2.102,151,1.929,152,1.818,154,1.062,155,1.221,156,1.929,159,1.221,161,1.472,163,1.221,165,1.221,167,0.931,168,0.931,169,0.99,170,0.702,171,0.931,172,1.534,173,1.378,174,0.866,175,1.848,176,0.931,177,0.931,178,2.128,179,0.807,180,1.373,181,1.892,182,1.729,183,1.58,184,2.033,185,1.698,186,1.062,187,1.698,188,1.221,189,1.062,190,1.31,191,1.31,192,2.155,193,0.931,194,0.931,195,0.931,196,0.931,197,1.893,198,0.931,199,0.931,200,1.893,201,1.408,202,0.931,203,1.408,204,0.931,205,0.931,206,0.931,207,1.533,208,2.336,209,1.408,210,1.848,211,1.99,212,1.929,213,1.698,214,0.931,215,1.408,216,0.931,217,0.931,218,1.698,219,0.931,220,0.931,221,0.931,222,0.931,223,0.931,224,1.408,225,2.033,226,1.99,227,0.931,228,1.373,229,0.753,230,0.931,231,1.408,232,0.931,233,1.221,234,0.931,235,0.931,236,0.931,237,0.931,238,0.931,239,1.427,240,0.931,241,0.931,242,0.931,243,1.408,244,1.408,245,0.931,246,1.408,247,1.698,248,1.854,249,2.286,250,1.408,251,1.408,252,1.408,253,1.408,254,1.698,255,0.931,256,0.931,257,0.931,258,0.931,259,0.931,260,1.408,261,0.931,262,0.931,263,1.408,264,1.408,265,0.931,266,1.408,267,0.931,268,0.931,269,0.931,270,1.408,271,0.807,272,2.033,273,0.931,274,0.931,275,0.931,276,0.931,277,0.931,278,0.931,279,1.893,280,1.698,281,1.408,282,1.698,283,0.931,284,1.893,285,1.138,286,0.931,287,0.931,288,0.931,289,0.931,290,0.931,291,0.931,292,0.931,293,0.931,294,0.931,295,0.931,296,0.931,297,0.931,298,0.931,299,0.931,300,0.931,301,0.931,302,0.931,303,0.931,304,0.931,305,0.931,306,0.931,307,0.931,308,1.922,310,3.192,311,1.39,312,1.39,313,1.39,315,1.39,316,1.081,317,1.39,318,1.408,319,1.39,358,3.496,359,3.496,360,3.496,361,2.311,362,2.311,363,2.311,364,2.311,365,2.311]],["title/interfaces/MonthServiceOptions.html",[0,0.195,248,1.156]],["body/interfaces/MonthServiceOptions.html",[0,0.296,1,0.543,2,0.148,3,0.148,4,0.099,5,0.283,7,0.77,8,0.414,9,0.123,10,0.331,14,0.531,15,0.148,16,0.028,17,0.595,20,0.633,21,0.233,23,0.654,26,0.345,28,0.345,29,0.372,32,0.595,33,0.489,37,0.543,38,0.43,39,0.365,40,0.538,41,0.283,45,0.345,46,0.646,54,0.503,58,0.372,59,0.254,61,0.313,70,0.633,76,0.503,77,0.458,80,0.414,82,0.291,83,0.414,94,0.654,95,0.283,97,0.345,98,0.283,104,0.572,105,0.654,106,0.654,107,0.345,108,0.015,109,0.015,113,1.634,116,0.923,119,0.86,120,0.86,122,0.99,132,0.377,135,1.636,138,0.99,139,1.486,140,0.923,141,1.656,142,2.021,143,1.738,144,1.064,146,1.064,151,1.486,152,1.631,154,0.802,155,1.348,156,1.816,159,1.348,161,1.348,163,1.348,165,1.348,167,1.064,168,1.064,169,1.093,170,0.802,171,1.064,172,1.59,173,1.42,174,0.99,175,1.875,176,1.064,177,1.064,178,2.213,179,0.923,180,0.86,181,2.001,182,1.816,183,1.881,184,2.15,185,1.837,186,1.172,187,1.064,188,1.348,189,1.172,190,1.447,191,1.447,192,1.947,193,1.064,194,1.064,195,1.064,196,1.064,197,2.021,198,1.064,199,1.064,200,1.837,201,1.555,202,1.064,203,1.064,204,1.064,205,1.064,206,1.064,207,1.385,208,2.325,209,1.064,210,1.816,211,1.881,212,1.816,213,1.837,214,1.064,215,1.555,216,1.064,217,1.064,218,1.837,219,1.064,220,1.064,221,1.064,222,1.064,223,1.064,224,1.064,225,1.837,226,2.001,227,1.064,228,1.486,229,0.86,230,1.064,231,1.555,232,1.064,233,1.348,234,1.064,235,1.064,236,1.064,237,1.064,238,1.064,239,1.385,240,1.064,241,1.064,242,1.064,243,1.555,244,1.555,245,1.064,246,1.555,247,1.837,248,1.864,249,2.378,250,1.555,251,1.555,252,1.555,253,1.064,254,1.064,255,1.064,256,1.064,257,1.064,258,1.064,259,1.064,260,1.555,261,1.064,262,1.064,263,1.064,264,1.064,265,1.064,266,1.555,267,1.064,268,1.064,269,1.064,270,1.555,271,0.923,272,1.064,273,1.064,274,1.064,275,1.064,276,1.064,277,1.064,278,1.064,279,2.021,280,1.837,281,1.555,282,1.837,283,1.064,284,2.021,285,1.257,286,1.064,287,1.064,288,1.064,289,1.064,290,1.064,291,1.064,292,1.064,293,1.064,294,1.064,295,1.064,296,1.064,297,1.064,298,1.064,299,1.064,300,1.064,301,1.064,302,1.064,303,1.064,304,1.064,305,1.064,306,1.064,307,1.064]],["title/interfaces/Page.html",[0,0.195,40,0.355]],["body/interfaces/Page.html",[0,0.392,1,0.49,2,0.177,3,0.177,4,0.119,5,0.339,6,0.834,7,0.819,8,0.689,9,0.147,10,0.376,11,0.895,12,0.829,13,0.895,14,0.594,15,0.304,16,0.028,17,0.657,18,0.895,19,0.895,20,0.597,21,0.249,22,1.079,23,0.657,24,1.242,25,1.158,26,0.412,27,0.895,28,0.412,29,0.304,30,1.158,31,0.834,32,0.645,33,0.47,34,0.895,35,1.242,36,0.895,37,0.507,38,0.376,39,0.431,40,0.733,41,0.583,42,1.33,43,0.801,44,1.158,45,0.412,46,0.651,47,0.895,48,0.777,49,1.242,50,1.426,51,0.895,52,1.079,53,1.426,54,0.572,55,1.242,56,1.242,57,0.994,58,0.485,59,0.596,60,1.242,61,0.52,62,1.541,63,1.242,64,1.541,65,1.242,66,1.541,67,1.541,68,0.895,69,1.242,70,0.695,71,1.242,72,1.619,73,1.602,74,1.541,75,1.242,76,0.412,77,0.597,78,0.895,79,0.895,80,0.339,81,1.541,82,0.458,83,0.339,84,0.895,85,0.895,86,1.242,87,0.895,88,0.895,89,1.242,90,1.079,91,0.895,92,0.895,93,0.895,94,0.572,95,0.339,96,0.723,97,0.412,98,0.47,99,0.895,100,0.895,101,0.895,102,0.895,103,0.895,104,0.339,105,0.412,106,0.412,107,0.412,108,0.017,109,0.017,152,1.541]],["title/interfaces/PageImage.html",[0,0.195,52,0.814]],["body/interfaces/PageImage.html",[0,0.393,1,0.493,2,0.179,3,0.179,4,0.121,5,0.344,6,0.847,7,0.822,8,0.697,9,0.15,10,0.38,11,0.908,12,0.832,13,0.908,14,0.594,15,0.284,16,0.028,17,0.662,18,0.908,19,0.908,20,0.723,21,0.249,22,1.09,23,0.662,24,1.255,25,1.17,26,0.418,27,0.908,28,0.418,29,0.309,30,1.17,31,0.847,32,0.65,33,0.475,34,0.908,35,1.255,36,0.908,37,0.509,38,0.38,39,0.432,40,0.728,41,0.544,42,1.341,43,0.81,44,1.17,45,0.418,46,0.653,47,0.908,48,0.789,49,1.438,50,1.255,51,0.908,52,1.249,53,1.438,54,0.578,55,1.255,56,1.255,57,1.002,58,0.489,59,0.527,60,0.908,61,0.38,62,1.255,63,0.908,64,0.908,65,0.908,66,1.438,67,0.908,68,1.255,69,1.683,70,0.697,71,1.255,72,1.628,73,1.609,74,1.551,75,1.255,76,0.418,77,0.602,78,0.908,79,0.908,80,0.344,81,1.551,82,0.46,83,0.344,84,0.908,85,0.908,86,1.255,87,0.908,88,0.908,89,1.255,90,1.09,91,0.908,92,0.908,93,0.908,94,0.578,95,0.344,96,0.734,97,0.418,98,0.475,99,0.908,100,0.908,101,0.908,102,0.908,103,0.908,104,0.344,105,0.418,106,0.418,107,0.418,108,0.018,109,0.018]],["title/classes/PageService.html",[132,0.217,163,1.156]],["body/classes/PageService.html",[0,0.255,1,0.527,2,0.135,3,0.135,4,0.091,5,0.387,7,0.75,8,0.514,9,0.112,10,0.309,12,0.626,14,0.538,15,0.313,16,0.028,17,0.564,20,0.663,21,0.229,23,0.729,26,0.314,28,0.314,29,0.347,32,0.569,33,0.463,37,0.553,38,0.462,39,0.392,40,0.551,41,0.258,43,0.79,45,0.47,46,0.63,54,0.47,58,0.347,59,0.232,61,0.428,70,0.616,76,0.47,77,0.428,80,0.387,82,0.272,83,0.387,94,0.703,95,0.258,97,0.314,98,0.258,104,0.63,105,0.703,106,0.67,107,0.314,108,0.014,109,0.014,113,1.562,116,0.841,119,0.784,120,0.784,122,0.903,132,0.377,135,1.638,138,0.903,139,1.407,140,0.841,141,1.705,142,1.932,143,1.82,144,0.97,145,1.452,146,0.97,149,1.952,151,1.914,152,1.779,154,1.095,155,1.259,156,1.872,159,1.259,161,1.259,163,1.509,165,1.259,167,0.97,168,0.97,169,1.021,170,0.731,171,0.97,172,1.552,173,1.391,174,0.903,175,1.872,176,0.97,177,0.97,178,2.155,179,0.841,180,1.407,181,1.926,182,1.562,183,1.62,184,2.069,185,1.74,186,1.095,187,1.74,188,1.259,189,1.095,190,1.351,191,1.351,192,2.173,193,0.97,194,0.97,195,0.97,196,0.97,197,1.932,198,0.97,199,0.97,200,1.74,201,1.452,202,0.97,203,1.452,204,0.97,205,0.97,206,0.97,207,1.56,208,2.332,209,1.452,210,1.872,211,2.021,212,1.914,213,1.74,214,0.97,215,1.452,216,0.97,217,0.97,218,1.74,219,0.97,220,0.97,221,0.97,222,0.97,223,0.97,224,1.452,225,2.069,226,2.021,227,0.97,228,1.407,229,0.784,230,0.97,231,1.452,232,0.97,233,1.259,234,0.97,235,0.97,236,0.97,237,0.97,238,0.97,239,1.312,240,0.97,241,0.97,242,0.97,243,1.74,244,1.74,245,1.452,246,1.452,247,1.74,248,1.676,249,2.069,250,1.452,251,1.452,252,1.452,253,0.97,254,0.97,255,0.97,256,0.97,257,0.97,258,0.97,259,0.97,260,1.452,261,0.97,262,0.97,263,0.97,264,0.97,265,0.97,266,1.452,267,0.97,268,0.97,269,0.97,270,1.452,271,0.841,272,0.97,273,0.97,274,0.97,275,0.97,276,0.97,277,0.97,278,0.97,279,1.932,280,1.74,281,1.452,282,1.74,283,0.97,284,1.932,285,1.174,286,0.97,287,0.97,288,0.97,289,0.97,290,0.97,291,0.97,292,0.97,293,0.97,294,0.97,295,0.97,296,0.97,297,0.97,298,0.97,299,0.97,300,0.97,301,0.97,302,0.97,303,0.97,304,0.97,305,0.97,306,0.97,307,0.97,308,1.983,310,3.242,311,1.448,312,1.448,313,1.448,315,1.448,316,1.126,317,1.448,318,1.452,319,1.448,366,3.606,367,2.409]],["title/interfaces/PagingInfo.html",[0,0.195,95,0.355]],["body/interfaces/PagingInfo.html",[0,0.393,1,0.493,2,0.179,3,0.179,4,0.121,5,0.344,6,0.847,7,0.81,8,0.691,9,0.15,10,0.38,11,0.908,12,0.832,13,0.908,14,0.591,15,0.284,16,0.028,17,0.662,18,0.908,19,0.908,20,0.602,21,0.249,22,1.09,23,0.662,24,1.255,25,1.17,26,0.418,27,0.908,28,0.418,29,0.309,30,1.17,31,0.847,32,0.682,33,0.475,34,0.908,35,1.255,36,0.908,37,0.509,38,0.38,39,0.432,40,0.731,41,0.544,42,1.341,43,0.81,44,1.17,45,0.418,46,0.653,47,0.908,48,0.789,49,1.255,50,1.255,51,0.908,52,1.09,53,1.438,54,0.578,55,1.255,56,1.255,57,1.002,58,0.489,59,0.527,60,0.908,61,0.38,62,1.255,63,0.908,64,0.908,65,0.908,66,1.551,67,0.908,68,0.908,69,1.255,70,0.697,71,1.255,72,1.628,73,1.609,74,1.551,75,1.255,76,0.418,77,0.602,78,0.908,79,0.908,80,0.344,81,1.551,82,0.486,83,0.344,84,0.908,85,0.908,86,1.255,87,0.908,88,0.908,89,1.438,90,1.347,91,0.908,92,0.908,93,0.908,94,0.578,95,0.475,96,1.162,97,0.714,98,0.475,99,0.908,100,0.908,101,0.908,102,0.908,103,0.908,104,0.344,105,0.418,106,0.418,107,0.418,108,0.018,109,0.018]],["title/interfaces/PagingMeta.html",[0,0.195,90,0.814]],["body/interfaces/PagingMeta.html",[0,0.393,1,0.492,2,0.179,3,0.179,4,0.12,5,0.343,6,0.843,7,0.809,8,0.691,9,0.149,10,0.379,11,0.905,12,0.831,13,0.905,14,0.591,15,0.284,16,0.028,17,0.661,18,0.905,19,0.905,20,0.601,21,0.249,22,1.087,23,0.661,24,1.252,25,1.167,26,0.417,27,0.905,28,0.417,29,0.308,30,1.167,31,0.843,32,0.681,33,0.474,34,0.905,35,1.252,36,0.905,37,0.522,38,0.379,39,0.442,40,0.731,41,0.543,42,1.338,43,0.926,44,1.167,45,0.417,46,0.653,47,0.905,48,0.786,49,1.252,50,1.252,51,0.905,52,1.087,53,1.435,54,0.576,55,1.252,56,1.252,57,1,58,0.488,59,0.526,60,0.905,61,0.379,62,1.252,63,0.905,64,0.905,65,0.905,66,1.435,67,0.905,68,0.905,69,1.252,70,0.696,71,1.252,72,1.626,73,1.607,74,1.548,75,1.252,76,0.417,77,0.601,78,0.905,79,0.905,80,0.343,81,1.548,82,0.468,83,0.343,84,0.905,85,0.905,86,1.252,87,0.905,88,0.905,89,1.435,90,1.246,91,1.252,92,1.548,93,1.252,94,0.749,95,0.343,96,0.731,97,0.417,98,0.474,99,0.905,100,0.905,101,0.905,102,0.905,103,0.905,104,0.343,105,0.417,106,0.417,107,0.417,108,0.018,109,0.018]],["title/interfaces/Question.html",[0,0.195,70,0.355]],["body/interfaces/Question.html",[0,0.39,1,0.483,2,0.17,3,0.17,4,0.115,5,0.327,6,0.804,7,0.813,8,0.691,9,0.142,10,0.366,11,0.863,12,0.852,13,0.863,14,0.597,15,0.349,16,0.028,17,0.736,18,0.863,19,0.863,20,0.586,21,0.247,22,1.052,23,0.644,24,1.211,25,1.129,26,0.397,27,0.863,28,0.397,29,0.293,30,1.129,31,0.804,32,0.635,33,0.459,34,0.863,35,1.211,36,0.863,37,0.501,38,0.423,39,0.433,40,0.724,41,0.53,42,1.304,43,0.782,44,1.129,45,0.397,46,0.644,47,0.863,48,0.749,49,1.211,50,1.211,51,0.863,52,1.052,53,1.399,54,0.644,55,1.598,56,1.211,57,1.057,58,0.563,59,0.59,60,0.863,61,0.361,62,1.211,63,0.863,64,0.863,65,0.863,66,1.399,67,0.863,68,0.863,69,1.211,70,0.72,71,1.399,72,1.736,73,1.685,74,1.736,75,1.598,76,0.558,77,0.727,78,1.211,79,1.517,80,0.327,81,1.517,82,0.453,83,0.327,84,0.863,85,0.863,86,1.211,87,0.863,88,0.863,89,1.211,90,1.052,91,0.863,92,0.863,93,0.863,94,0.558,95,0.327,96,0.697,97,0.397,98,0.459,99,0.863,100,0.863,101,0.863,102,0.863,103,0.863,104,0.327,105,0.397,106,0.397,107,0.397,108,0.017,109,0.017]],["title/classes/QuestionService.html",[132,0.217,165,1.156]],["body/classes/QuestionService.html",[0,0.252,1,0.525,2,0.132,3,0.132,4,0.089,5,0.459,7,0.746,8,0.51,9,0.11,10,0.305,12,0.665,14,0.536,15,0.32,16,0.028,17,0.558,20,0.659,21,0.228,23,0.725,26,0.309,28,0.309,29,0.343,32,0.605,33,0.459,37,0.552,38,0.459,39,0.391,40,0.51,41,0.254,43,0.869,45,0.309,46,0.627,54,0.62,58,0.343,59,0.228,61,0.281,70,0.657,73,0.94,76,0.62,77,0.507,80,0.51,82,0.269,83,0.382,94,0.699,95,0.254,97,0.309,98,0.254,104,0.627,105,0.699,106,0.699,107,0.309,108,0.014,109,0.014,113,1.549,116,0.827,119,0.771,120,0.771,122,0.887,132,0.375,135,1.64,138,0.887,139,1.392,140,0.827,141,1.718,142,1.915,143,1.81,144,0.953,145,1.433,146,0.953,149,1.997,151,1.94,152,1.788,154,1.081,155,1.243,156,1.862,159,1.243,161,1.243,163,1.243,165,1.493,167,0.953,168,0.953,169,1.008,170,0.719,171,0.953,172,1.544,173,1.385,174,0.887,175,1.862,176,0.953,177,0.953,178,2.143,179,0.827,180,1.392,181,1.911,182,1.549,183,1.603,184,2.054,185,1.722,186,1.081,187,1.722,188,1.243,189,1.081,190,1.334,191,1.334,192,2.165,193,0.953,194,0.953,195,0.953,196,0.953,197,1.915,198,0.953,199,0.953,200,1.722,201,1.433,202,0.953,203,1.433,204,0.953,205,0.953,206,0.953,207,1.627,208,2.324,209,1.433,210,1.862,211,2.008,212,1.905,213,1.722,214,0.953,215,1.433,216,0.953,217,0.953,218,1.722,219,0.953,220,0.953,221,0.953,222,0.953,223,0.953,224,1.433,225,2.054,226,2.008,227,0.953,228,1.392,229,0.771,230,0.953,231,1.433,232,0.953,233,1.243,234,0.953,235,0.953,236,0.953,237,0.953,238,0.953,239,1.444,240,0.953,241,0.953,242,0.953,243,1.722,244,1.433,245,0.953,246,1.433,247,1.722,248,1.661,249,2.054,250,1.433,251,1.433,252,1.433,253,0.953,254,0.953,255,0.953,256,0.953,257,0.953,258,0.953,259,0.953,260,1.433,261,0.953,262,0.953,263,0.953,264,0.953,265,0.953,266,1.722,267,1.433,268,1.433,269,0.953,270,1.433,271,0.827,272,0.953,273,0.953,274,0.953,275,0.953,276,0.953,277,0.953,278,0.953,279,1.915,280,1.722,281,1.433,282,1.722,283,0.953,284,1.915,285,1.159,286,0.953,287,0.953,288,0.953,289,0.953,290,0.953,291,0.953,292,0.953,293,0.953,294,0.953,295,0.953,296,0.953,297,0.953,298,0.953,299,0.953,300,0.953,301,0.953,302,0.953,303,0.953,304,0.953,305,0.953,306,0.953,307,0.953,308,1.957,310,3.221,311,1.423,312,1.423,313,1.423,315,1.423,316,1.107,317,1.423,318,1.433,319,1.423,368,3.559,369,2.367,370,2.367]],["title/classes/Queue.html",[132,0.217,371,1.99]],["body/classes/Queue.html",[2,0.228,3,0.228,4,0.154,9,0.19,10,0.446,12,0.678,15,0.356,16,0.028,21,0.196,39,0.449,48,1.279,82,0.392,108,0.021,109,0.021,132,0.375,135,1.566,141,1.511,143,1.864,145,2.094,147,2.244,149,2.287,151,1.693,152,1.473,154,1.738,172,1.077,173,1.31,179,1.816,180,1.864,182,1.329,189,1.579,210,1.329,212,1.963,233,1.425,285,1.329,316,1.908,318,2.428,371,3.127,372,3.019,373,5.083,374,5.083,375,5.083,376,5.367,377,5.083,378,5.201,379,5.083,380,4.385,381,5.083,382,5.201,383,4.081,384,4.46,385,4.081,386,4.081,387,4.081,388,4.385,389,4.081,390,5.083,391,4.081,392,2.705,393,4.385,394,4.385,395,3.441,396,4.385,397,4.385,398,4.385,399,3.441,400,3.441,401,3.441,402,3.441,403,3.441,404,3.441,405,3.019,406,5.083,407,5.25,408,3.441,409,3.441,410,3.441,411,3.441,412,3.441,413,3.441,414,4.385,415,3.441,416,3.441]],["title/classes/QueueEntry.html",[132,0.217,392,2.194]],["body/classes/QueueEntry.html",[2,0.248,3,0.248,4,0.167,9,0.207,10,0.469,15,0.333,16,0.028,21,0.206,39,0.407,48,1.089,82,0.413,108,0.022,109,0.022,132,0.39,135,1.527,141,1.169,143,1.442,149,2.075,154,1.662,172,1.169,173,1.253,179,1.546,182,2.116,189,1.662,210,1.442,212,1.935,233,1.546,285,1.442,318,1.783,371,2.662,372,3.276,373,3.733,374,3.733,375,3.733,376,4.616,377,3.733,379,3.733,380,3.733,381,4.616,384,4.05,388,3.733,390,5.479,392,3.628,393,5.378,394,5.378,395,3.733,396,4.616,397,4.616,398,4.616,399,3.733,400,3.733,401,3.733,402,3.733,403,3.733,404,3.733,405,3.276,406,5.234,407,5.378,408,3.733,409,3.733,410,3.733,411,3.733,412,3.733,413,3.733,414,4.616,415,3.733,416,3.733,417,4.428,418,4.428,419,4.428]],["title/classes/RailsApiClient.html",[132,0.217,156,1.078]],["body/classes/RailsApiClient.html",[2,0.166,3,0.166,4,0.111,9,0.138,10,0.359,12,0.777,14,0.593,15,0.359,16,0.028,20,0.577,21,0.111,30,1.53,33,0.693,37,0.478,38,0.521,39,0.38,44,0.781,77,0.351,108,0.017,109,0.017,113,0.963,132,0.275,133,3.483,135,1.656,141,1.782,143,1.886,145,2.399,147,1.627,149,2.238,151,1.94,152,1.687,154,1.476,156,1.364,172,1.607,173,0.959,180,1.721,182,1.364,186,0.898,189,1.272,207,1.272,208,2.233,212,1.364,226,1.109,239,1.976,285,1.364,316,1.958,318,2.451,371,3.483,405,3.099,420,5.448,421,2.494,422,5.287,423,5.287,424,4.188,425,4.188,426,4.188,427,5.957,428,4.188,429,4.188,430,4.188,431,4.188,432,2.958,433,2.958,434,2.958,435,2.958,436,4.188,437,2.958,438,4.188,439,2.958,440,4.188,441,4.861,442,2.958,443,4.188,444,2.958,445,2.958,446,4.188,447,4.188,448,2.958,449,4.188,450,4.188,451,2.958,452,5.58,453,4.188,454,4.188,455,2.958,456,5.58,457,5.287,458,2.958,459,4.861,460,4.861,461,2.958,462,4.188,463,4.188,464,6.085,465,4.188,466,4.188,467,2.958,468,4.188,469,4.188,470,2.958,471,2.958,472,4.188,473,4.188,474,2.958,475,2.958,476,2.958,477,2.958,478,2.958,479,2.958,480,2.958,481,2.958,482,2.958,483,2.958,484,4.861,485,5.58,486,4.188,487,4.188,488,2.958,489,4.861,490,2.958,491,2.958,492,2.958,493,2.958,494,2.958,495,2.958,496,2.958,497,2.958,498,2.958,499,2.958,500,2.958,501,2.958,502,2.958,503,2.958,504,2.958,505,4.188,506,2.958,507,2.958]],["title/classes/StorageItem.html",[132,0.217,327,1.99]],["body/classes/StorageItem.html",[0,0.275,2,0.261,3,0.261,4,0.175,9,0.217,10,0.484,14,0.579,15,0.34,16,0.028,21,0.238,37,0.399,38,0.484,39,0.37,57,1.114,58,0.623,59,0.608,82,0.477,96,1.391,108,0.022,109,0.022,132,0.398,133,3.798,135,1.389,141,1.668,149,2.122,169,1.319,170,1.918,172,1.491,173,1.066,186,1.414,207,1.414,228,1.838,229,1.516,239,1.414,320,3.798,321,2.8,325,3.446,327,3.798,328,3.446,330,3.446,332,3.446,334,3.446,335,3.087,336,3.087,337,3.446,338,3.446,339,3.446,340,3.446,341,3.446,342,3.446,343,3.446,344,3.446,508,4.657,509,4.657,510,4.657]],["title/interfaces/Updatable.html",[0,0.195,57,0.653]],["body/interfaces/Updatable.html",[0,0.336,2,0.263,3,0.263,4,0.177,9,0.22,10,0.487,14,0.586,15,0.342,16,0.028,21,0.239,37,0.543,38,0.556,39,0.416,57,1.205,58,0.625,59,0.453,82,0.355,96,1.077,108,0.023,109,0.023,132,0.372,133,3.811,135,1.398,141,1.674,169,1.333,170,1.726,172,1.5,173,1.077,186,1.429,207,1.429,228,1.85,229,1.533,239,1.429,320,2.83,321,2.83,325,3.483,327,3.67,328,3.483,330,3.483,332,3.483,334,3.483,335,3.12,336,3.12,337,3.483,338,3.483,339,3.483,340,3.483,341,3.483,342,3.483,343,3.483,344,3.483]],["title/interfaces/UrlParams.html",[0,0.195,104,0.355]],["body/interfaces/UrlParams.html",[0,0.392,1,0.49,2,0.177,3,0.177,4,0.119,5,0.34,6,0.836,7,0.807,8,0.689,9,0.148,10,0.376,11,0.897,12,0.83,13,0.897,14,0.593,15,0.32,16,0.028,17,0.658,18,0.897,19,0.897,20,0.598,21,0.249,22,1.08,23,0.658,24,1.244,25,1.16,26,0.413,27,0.897,28,0.413,29,0.305,30,1.16,31,0.836,32,0.646,33,0.471,34,0.897,35,1.244,36,0.897,37,0.507,38,0.376,39,0.439,40,0.727,41,0.541,42,1.331,43,0.803,44,1.16,45,0.413,46,0.651,47,0.897,48,0.779,49,1.244,50,1.244,51,0.897,52,1.08,53,1.428,54,0.573,55,1.244,56,1.244,57,0.995,58,0.486,59,0.524,60,0.897,61,0.376,62,1.244,63,0.897,64,0.897,65,0.897,66,1.428,67,0.897,68,0.897,69,1.244,70,0.695,71,1.244,72,1.62,73,1.603,74,1.543,75,1.244,76,0.413,77,0.598,78,0.897,79,0.897,80,0.34,81,1.543,82,0.458,83,0.34,84,0.897,85,0.897,86,1.244,87,0.897,88,0.897,89,1.244,90,1.08,91,0.897,92,0.897,93,0.897,94,0.746,95,0.34,96,0.725,97,0.413,98,0.471,99,0.897,100,0.897,101,0.897,102,0.897,103,0.897,104,0.471,105,0.71,106,0.71,107,0.71,108,0.017,109,0.017,152,1.753]],["title/coverage.html",[511,3.818]],["body/coverage.html",[0,0.407,1,0.352,4,0.155,5,0.748,6,1.803,8,0.56,15,0.23,16,0.028,22,1.011,29,0.396,33,0.441,40,0.441,41,0.441,46,0.441,52,1.011,57,0.811,70,0.441,80,0.441,83,0.441,90,1.011,95,0.441,98,0.441,104,0.441,108,0.021,109,0.021,119,1.338,120,1.338,132,0.44,139,1.338,140,2.357,155,1.435,156,1.338,159,1.435,161,1.435,163,1.435,165,1.435,169,1.164,173,0.941,175,1.338,188,1.435,192,1.435,211,1.541,248,1.435,271,1.435,320,3.453,321,3.453,327,2.471,371,2.471,372,3.866,384,4.968,392,2.724,420,3.466,421,3.466,511,3.466,512,4.11,513,4.11,514,6.24,515,6.24,516,6.24,517,6.24,518,4.11,519,4.11,520,5.225,521,5.225,522,4.11,523,4.11,524,4.11,525,4.11,526,5.225,527,4.11,528,4.11,529,4.11,530,4.11,531,4.11,532,4.11,533,4.11,534,4.11,535,4.11,536,4.11,537,4.11,538,4.11,539,5.744,540,4.11,541,4.11,542,3.866,543,5.744,544,4.11,545,4.11,546,4.11,547,4.11]],["title/miscellaneous/enumerations.html",[548,1.828,549,3.359]],["body/miscellaneous/enumerations.html",[9,0.251,16,0.024,108,0.024,109,0.024,170,1.868,320,3.238,321,3.698,335,3.57,336,3.57,548,3.57,549,4.542,550,5.386]],["title/index.html",[9,0.129,551,2.758,552,2.758]],["body/index.html",[1,0.545,4,0.215,16,0.028,21,0.179,25,1.51,31,1.619,32,0.564,42,1.256,61,0.564,108,0.023,109,0.023,111,3.791,113,2.21,114,4.823,116,1.662,131,3.52,132,0.312,136,3.52,183,1.783,553,6.362,554,6.684,555,6.362,556,6.508,557,4.758,558,5.719,559,6.132,560,4.758,561,5.719,562,5.719,563,4.758,564,4.758,565,6.132,566,4.758,567,4.758,568,4.012,569,4.758,570,4.758,571,4.758,572,4.758,573,4.758,574,4.758,575,4.758,576,4.758,577,4.758,578,4.758,579,4.758,580,4.758,581,4.758,582,4.758]],["title/modules.html",[110,2.722]],["body/modules.html",[16,0.024,108,0.024,109,0.024,110,3.265,111,3.599,583,5.43,584,5.43,585,5.43]],["title/overview.html",[586,3.818]],["body/overview.html",[0,0.314,16,0.024,21,0.2,108,0.024,109,0.024,110,3.672,131,3.937,132,0.349,136,3.937,139,1.733,210,1.989,568,4.487,586,4.487,587,5.321,588,5.321,589,6.108,590,5.321,591,5.321,592,5.321,593,5.321]],["title/miscellaneous/variables.html",[542,2.948,548,1.828]],["body/miscellaneous/variables.html",[5,0.56,9,0.244,15,0.292,16,0.027,108,0.024,109,0.024,120,2.076,140,2.227,173,1.195,174,1.958,175,1.967,178,1.958,180,1.967,181,1.958,188,2.227,189,1.586,190,1.958,191,1.958,318,2.434,542,3.864,548,3.462,594,6.042]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":384,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["0/1",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":210,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"overview.html":{}}}],["1/2",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":592,"title":{},"body":{"overview.html":{}}}],["12",{"_index":257,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["19",{"_index":593,"title":{},"body":{"overview.html":{}}}],["2/10",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":211,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["200",{"_index":506,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["25",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["_concurr",{"_index":373,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_idcount",{"_index":374,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["_queue",{"_index":375,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["accessor",{"_index":351,"title":{},"body":{"classes/ModelService.html":{}}}],["accesstoken",{"_index":422,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["add",{"_index":378,"title":{},"body":{"classes/Queue.html":{}}}],["add(promisegener",{"_index":388,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["aka",{"_index":243,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["angular",{"_index":559,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":118,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["angular/cor",{"_index":116,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"index.html":{}}}],["angular/platform",{"_index":563,"title":{},"body":{"index.html":{}}}],["anim",{"_index":1,"title":{"interfaces/Animal.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["animalapicredenti",{"_index":22,"title":{"interfaces/AnimalApiCredentials.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalgen",{"_index":280,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["animalgener",{"_index":249,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["animalid",{"_index":102,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["animalpathgen",{"_index":282,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["animals/${this.currentanimal.id}/${model",{"_index":283,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["animalsdkconfig",{"_index":29,"title":{"interfaces/AnimalSdkConfig.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["animalsdkconfigservic",{"_index":120,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animalsdkmodul",{"_index":111,"title":{"modules/AnimalSDKModule.html":{}},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"modules.html":{}}}],["animalsdkservic",{"_index":119,"title":{"injectables/AnimalSDKService.html":{}},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["animalservic",{"_index":155,"title":{"classes/AnimalService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["animalservice(this.cli",{"_index":296,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["animalserviceopt",{"_index":271,"title":{"interfaces/AnimalServiceOptions.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["answer",{"_index":76,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["api",{"_index":33,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["apistorag",{"_index":169,"title":{"classes/ApiStorage.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["apistorage.get(key",{"_index":229,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.getkey(this.path",{"_index":206,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["apistorage.getkey(updatable.model",{"_index":342,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["apistorage.process(res[this.camelmodel].map(p",{"_index":219,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["apistorage.set(key",{"_index":241,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["apivers",{"_index":441,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["app.compon",{"_index":566,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":565,"title":{},"body":{"index.html":{}}}],["applic",{"_index":25,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["application/json",{"_index":475,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["appmodul",{"_index":561,"title":{},"body":{"index.html":{}}}],["array",{"_index":48,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"interfaces/UrlParams.html":{}}}],["array.isarray(obj",{"_index":461,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["asc",{"_index":265,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["ask",{"_index":73,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["ask(quest",{"_index":268,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["askquest",{"_index":80,"title":{"interfaces/AskQuestion.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["associ",{"_index":50,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["avail",{"_index":584,"title":{},"body":{"modules.html":{}}}],["bar",{"_index":88,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["baseapiurl",{"_index":478,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["basic",{"_index":99,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["basicmonth",{"_index":98,"title":{"interfaces/BasicMonth.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["basicpag",{"_index":41,"title":{"interfaces/BasicPage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["bearer",{"_index":477,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["bodi",{"_index":44,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["boolean",{"_index":179,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["bootstrap",{"_index":568,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brows",{"_index":585,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":564,"title":{},"body":{"index.html":{}}}],["browsermodul",{"_index":562,"title":{},"body":{"index.html":{}}}],["buildresourc",{"_index":424,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildresource(url",{"_index":438,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildto",{"_index":576,"title":{},"body":{"index.html":{}}}],["buildurl",{"_index":425,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["buildurl(model",{"_index":440,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cach",{"_index":178,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":34,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["callapi",{"_index":426,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["callapi(url",{"_index":443,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson",{"_index":500,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["cameljson._r",{"_index":502,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["camelmodel",{"_index":193,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["case",{"_index":504,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["catch",{"_index":415,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["catch(err",{"_index":413,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["class",{"_index":132,"title":{"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["client",{"_index":23,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["client.t",{"_index":421,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["client.ts:38",{"_index":455,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:4",{"_index":434,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:5",{"_index":435,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:54",{"_index":432,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:6",{"_index":433,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:60",{"_index":448,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:65",{"_index":445,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:7",{"_index":437,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:77",{"_index":442,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:82",{"_index":439,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:86",{"_index":444,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client.ts:9",{"_index":451,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["client_credenti",{"_index":306,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["clientid",{"_index":26,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["clientsecret",{"_index":28,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["commonmodul",{"_index":117,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["compon",{"_index":569,"title":{},"body":{"index.html":{}}}],["conceivedon",{"_index":11,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["concurr",{"_index":381,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["config",{"_index":138,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["connect",{"_index":36,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["console.log('connect",{"_index":276,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["console.log('log",{"_index":301,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["console.log(`${fullurl",{"_index":498,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["console.log(`fetch",{"_index":236,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["console.log(`return",{"_index":232,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["const",{"_index":172,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["constructor(@inject(animalsdkconfigservic",{"_index":275,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["constructor(cli",{"_index":200,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["constructor(config",{"_index":148,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["constructor(domain",{"_index":431,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["constructor(maxqueu",{"_index":380,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["content",{"_index":474,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["continu",{"_index":466,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["coverag",{"_index":511,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":54,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["created_at",{"_index":190,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":55,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["credient",{"_index":35,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["current",{"_index":272,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["currentanim",{"_index":144,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["d",{"_index":462,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["d.t",{"_index":574,"title":{},"body":{"index.html":{}}}],["d1",{"_index":365,"title":{},"body":{"classes/MonthService.html":{}}}],["d1.getfullyear",{"_index":256,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["d1.getmonth",{"_index":258,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["d2",{"_index":254,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["d2.getfullyear",{"_index":255,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["d2.getmonth",{"_index":259,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["date",{"_index":17,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["date(storedobj.updatedat",{"_index":344,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["date(this.animalgenerator().conceivedon",{"_index":262,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["declar",{"_index":131,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":180,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["defaultopt",{"_index":188,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultsort",{"_index":181,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":149,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{}}}],["depend",{"_index":587,"title":{},"body":{"overview.html":{}}}],["dequeu",{"_index":379,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["desc",{"_index":191,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["descript",{"_index":43,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["develop",{"_index":572,"title":{},"body":{"index.html":{}}}],["direct",{"_index":570,"title":{},"body":{"index.html":{}}}],["document",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":30,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["draft",{"_index":60,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["email",{"_index":74,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["enum",{"_index":334,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["enumer",{"_index":549,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":416,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["error('queu",{"_index":401,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":7,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["fals",{"_index":189,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["fetch(fullurl",{"_index":495,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"index.html":{}}}],["filenam",{"_index":69,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["filter(v",{"_index":492,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["forroot(config",{"_index":134,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["full",{"_index":71,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["fullurl",{"_index":485,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["function",{"_index":182,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["gener",{"_index":183,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"index.html":{}}}],["get",{"_index":551,"title":{"index.html":{}},"body":{}}],["get(id",{"_index":224,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["get(key",{"_index":325,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["getal",{"_index":308,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["getall(param",{"_index":209,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["getallansw",{"_index":368,"title":{},"body":{"classes/QuestionService.html":{}}}],["getallanswered(param",{"_index":267,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["getallord",{"_index":358,"title":{},"body":{"classes/MonthService.html":{}}}],["getallordered(param",{"_index":264,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["getallpublish",{"_index":366,"title":{},"body":{"classes/PageService.html":{}}}],["getallpublished(param",{"_index":245,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["getcamelmodel",{"_index":352,"title":{},"body":{"classes/ModelService.html":{}}}],["getkey",{"_index":322,"title":{},"body":{"classes/ApiStorage.html":{}}}],["getkey(model",{"_index":328,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["getmodelurl",{"_index":354,"title":{},"body":{"classes/ModelService.html":{}}}],["getpath",{"_index":356,"title":{},"body":{"classes/ModelService.html":{}}}],["go",{"_index":84,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["granttyp",{"_index":305,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["graph",{"_index":583,"title":{},"body":{"modules.html":{}}}],["header",{"_index":427,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headers['author",{"_index":476,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["headersinit",{"_index":446,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["id",{"_index":38,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["identifi",{"_index":8,"title":{"interfaces/Identifiable.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["imag",{"_index":49,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["image'",{"_index":68,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["imageurl",{"_index":51,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["import",{"_index":113,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"index.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["inform",{"_index":66,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["inherit",{"_index":310,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["inject",{"_index":139,"title":{"injectables/AnimalSDKService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":167,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["injectiontoken('animalsdkconfig",{"_index":174,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["instal",{"_index":553,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"overview.html":{}}}],["intern",{"_index":225,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["internal(json",{"_index":240,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["internal(storedobj.item",{"_index":234,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["invalid",{"_index":335,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["isauth",{"_index":423,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["item",{"_index":82,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["item.reject(err",{"_index":414,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["item.resolve(valu",{"_index":412,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["js",{"_index":573,"title":{},"body":{"index.html":{}}}],["json",{"_index":226,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{}}}],["json.parse(localstorage.getitem(key",{"_index":340,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(object",{"_index":339,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["json.stringify(param",{"_index":494,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["json.updatedat",{"_index":242,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["jsonbodi",{"_index":484,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k",{"_index":459,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["k[1].touppercas",{"_index":460,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["key",{"_index":186,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["keygener",{"_index":187,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["keygenerator(id",{"_index":203,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["key}=${params[key",{"_index":491,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["last",{"_index":56,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["legend",{"_index":588,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":554,"title":{},"body":{"index.html":{}}}],["limit",{"_index":402,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["link",{"_index":62,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["lint",{"_index":577,"title":{},"body":{"index.html":{}}}],["lintlicens",{"_index":579,"title":{},"body":{"index.html":{}}}],["liter",{"_index":454,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["localstorage.setitem(key",{"_index":338,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["log",{"_index":45,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["login",{"_index":146,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["mata",{"_index":582,"title":{},"body":{"index.html":{}}}],["match",{"_index":109,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxqueu",{"_index":376,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["menu",{"_index":81,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["menu_item",{"_index":290,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["menuitem",{"_index":83,"title":{"interfaces/MenuItem.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["menuitemservic",{"_index":159,"title":{"classes/MenuItemService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["menuitemservice(this.cli",{"_index":289,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["meta",{"_index":97,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["metadata.json",{"_index":575,"title":{},"body":{"index.html":{}}}],["method",{"_index":145,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["miscellan",{"_index":548,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":580,"title":{},"body":{"index.html":{}}}],["model",{"_index":37,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["modelservic",{"_index":192,"title":{"classes/ModelService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["modelservice:25",{"_index":311,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelservice:26",{"_index":312,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelservice:40",{"_index":313,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelservice:48",{"_index":319,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelservice:55",{"_index":317,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelservice:72",{"_index":315,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["modelserviceopt",{"_index":175,"title":{"interfaces/ModelServiceOptions.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modelurl",{"_index":195,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["model}/${id",{"_index":337,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["modul",{"_index":110,"title":{"modules/AnimalSDKModule.html":{},"modules.html":{}},"body":{"modules/AnimalSDKModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":115,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["month",{"_index":46,"title":{"interfaces/Month.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["monthdiff",{"_index":359,"title":{},"body":{"classes/MonthService.html":{}}}],["monthdiff(d1",{"_index":253,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["monthservic",{"_index":161,"title":{"classes/MonthService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["monthservice(this.cli",{"_index":294,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["monthserviceopt",{"_index":248,"title":{"interfaces/MonthServiceOptions.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["more",{"_index":65,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["moreinfourl",{"_index":67,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["name",{"_index":12,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["nestedopt",{"_index":284,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["new",{"_index":173,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newobj",{"_index":456,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.replace(/(\\_\\w)/g",{"_index":465,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["newobj[d.split(/(?=[a",{"_index":468,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["ngmodul",{"_index":114,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{}}}],["nichola",{"_index":581,"title":{},"body":{"index.html":{}}}],["nil",{"_index":266,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["npm",{"_index":556,"title":{},"body":{"index.html":{}}}],["null",{"_index":239,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["null).join",{"_index":493,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["number",{"_index":39,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["oauth",{"_index":24,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["oauth/token",{"_index":300,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["obj",{"_index":452,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.hasownproperty(d",{"_index":463,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj.replace(/(\\_\\w)/g",{"_index":458,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["obj[d",{"_index":464,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["object",{"_index":207,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["object.keys(params).map(key",{"_index":488,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["onc",{"_index":558,"title":{},"body":{"index.html":{}}}],["option",{"_index":152,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["options.animalgener",{"_index":252,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["order",{"_index":263,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["other",{"_index":103,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["out",{"_index":591,"title":{},"body":{"overview.html":{}}}],["overrid",{"_index":101,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["overview",{"_index":586,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":220,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["p.updatedat",{"_index":221,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["page",{"_index":40,"title":{"interfaces/Page.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagecount",{"_index":92,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageid",{"_index":85,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pageimag",{"_index":52,"title":{"interfaces/PageImage.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagenum",{"_index":105,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["pages",{"_index":94,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["pageservic",{"_index":163,"title":{"classes/PageService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["pageservice(this.cli",{"_index":287,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["pagetyp",{"_index":47,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pagin",{"_index":89,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["paginginfo",{"_index":95,"title":{"interfaces/PagingInfo.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["pagingmeta",{"_index":90,"title":{"interfaces/PagingMeta.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["param",{"_index":208,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{}}}],["paramet",{"_index":151,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["params).then(r",{"_index":217,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["params.search",{"_index":246,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["params.sort",{"_index":213,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["params[key",{"_index":490,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["path",{"_index":184,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["pathgener",{"_index":185,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["pendingcount",{"_index":377,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["per",{"_index":93,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["person",{"_index":72,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pipe",{"_index":571,"title":{},"body":{"index.html":{}}}],["posit",{"_index":86,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["post",{"_index":270,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["pregen",{"_index":18,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["pregnanc",{"_index":362,"title":{},"body":{"classes/MonthService.html":{}}}],["privat",{"_index":143,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["process",{"_index":323,"title":{},"body":{"classes/ApiStorage.html":{}}}],["process(updat",{"_index":330,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["promis",{"_index":212,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["promise((r",{"_index":233,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promise(r",{"_index":273,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["promise.resolve(item.promisegener",{"_index":410,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["promisegener",{"_index":390,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["properti",{"_index":10,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["protect",{"_index":142,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["provid",{"_index":136,"title":{},"body":{"modules/AnimalSDKModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":141,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["publish",{"_index":61,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["queri",{"_index":487,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["question",{"_index":70,"title":{"interfaces/Question.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["questionservic",{"_index":165,"title":{"classes/QuestionService.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["questionservice(this.cli",{"_index":292,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["queue",{"_index":371,"title":{"classes/Queue.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["queue(infin",{"_index":436,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["queueentri",{"_index":392,"title":{"classes/QueueEntry.html":{}},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["rail",{"_index":168,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["railsapicli",{"_index":156,"title":{"classes/RailsApiClient.html":{}},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"coverage.html":{}}}],["railsapiclient(config.domain",{"_index":278,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["railsapiclient.tocamelcase(json",{"_index":501,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["railsapiclient.tocamelcase(this.model",{"_index":194,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["railsapiclient.tosnakecase(param",{"_index":486,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["re",{"_index":405,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["reach",{"_index":403,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reason",{"_index":395,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej",{"_index":398,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["rej(new",{"_index":400,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["reject",{"_index":394,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["res(storedobj.item",{"_index":235,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["res(this.animalgener",{"_index":274,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["res(this.monthdiff(new",{"_index":261,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["res.json().then(json",{"_index":499,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res.meta",{"_index":223,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["res.statu",{"_index":505,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["res[this.camelmodel",{"_index":222,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["reset",{"_index":590,"title":{},"body":{"overview.html":{}}}],["resolv",{"_index":393,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["respondedbyid",{"_index":79,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["respons",{"_index":77,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["result",{"_index":108,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":135,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["run",{"_index":555,"title":{},"body":{"index.html":{}}}],["sample.compon",{"_index":124,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.direct",{"_index":126,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.pip",{"_index":128,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sample.servic",{"_index":130,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplecompon",{"_index":123,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampledirect",{"_index":125,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["samplepip",{"_index":127,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sampleservic",{"_index":129,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["saveconsum",{"_index":557,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":31,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["sdk.model",{"_index":122,"title":{},"body":{"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["sdk.models.t",{"_index":6,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["sdk.servic",{"_index":121,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["sdk.service.t",{"_index":140,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sdk.service.ts:100",{"_index":367,"title":{},"body":{"classes/PageService.html":{}}}],["sdk.service.ts:112",{"_index":360,"title":{},"body":{"classes/MonthService.html":{}}}],["sdk.service.ts:119",{"_index":364,"title":{},"body":{"classes/MonthService.html":{}}}],["sdk.service.ts:129",{"_index":361,"title":{},"body":{"classes/MonthService.html":{}}}],["sdk.service.ts:141",{"_index":363,"title":{},"body":{"classes/MonthService.html":{}}}],["sdk.service.ts:153",{"_index":370,"title":{},"body":{"classes/QuestionService.html":{}}}],["sdk.service.ts:162",{"_index":369,"title":{},"body":{"classes/QuestionService.html":{}}}],["sdk.service.ts:171",{"_index":309,"title":{},"body":{"classes/AnimalService.html":{}}}],["sdk.service.ts:177",{"_index":314,"title":{},"body":{"classes/AnimalService.html":{}}}],["sdk.service.ts:188",{"_index":157,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:189",{"_index":158,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:190",{"_index":164,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:191",{"_index":162,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:192",{"_index":160,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:193",{"_index":166,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:194",{"_index":150,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:232",{"_index":153,"title":{},"body":{"injectables/AnimalSDKService.html":{}}}],["sdk.service.ts:25",{"_index":346,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:26",{"_index":347,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:27",{"_index":353,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:30",{"_index":355,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:33",{"_index":357,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:40",{"_index":345,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:48",{"_index":350,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:55",{"_index":349,"title":{},"body":{"classes/ModelService.html":{}}}],["sdk.service.ts:72",{"_index":348,"title":{},"body":{"classes/ModelService.html":{}}}],["sdkand",{"_index":560,"title":{},"body":{"index.html":{}}}],["search",{"_index":106,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["secret",{"_index":27,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["servic",{"_index":177,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["set",{"_index":324,"title":{},"body":{"classes/ApiStorage.html":{}}}],["set(key",{"_index":332,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["setaccesstoken",{"_index":428,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["setaccesstoken(token",{"_index":447,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["side",{"_index":87,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["sort",{"_index":107,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{}}}],["sortbycr",{"_index":279,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"modules/AnimalSDKModule.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["specifi",{"_index":567,"title":{},"body":{"index.html":{}}}],["src/.../anim",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/anim",{"_index":5,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/api",{"_index":320,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/index.t",{"_index":112,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["src/queue.t",{"_index":372,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{},"coverage.html":{}}}],["src/queue.ts:10",{"_index":385,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:11",{"_index":383,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:12",{"_index":382,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:18",{"_index":389,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:2",{"_index":417,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:3",{"_index":419,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:34",{"_index":391,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:4",{"_index":418,"title":{},"body":{"classes/QueueEntry.html":{}}}],["src/queue.ts:8",{"_index":387,"title":{},"body":{"classes/Queue.html":{}}}],["src/queue.ts:9",{"_index":386,"title":{},"body":{"classes/Queue.html":{}}}],["src/rail",{"_index":420,"title":{},"body":{"classes/RailsApiClient.html":{},"coverage.html":{}}}],["start",{"_index":552,"title":{"index.html":{}},"body":{}}],["statement",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":133,"title":{},"body":{"modules/AnimalSDKModule.html":{},"classes/ApiStorage.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["statu",{"_index":59,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["status=1,page_type=log",{"_index":244,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["storag",{"_index":171,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["storage.t",{"_index":321,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["storage.ts:18",{"_index":329,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:21",{"_index":333,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:25",{"_index":326,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:29",{"_index":331,"title":{},"body":{"classes/ApiStorage.html":{}}}],["storage.ts:6",{"_index":508,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:7",{"_index":510,"title":{},"body":{"classes/StorageItem.html":{}}}],["storage.ts:8",{"_index":509,"title":{},"body":{"classes/StorageItem.html":{}}}],["storageitem",{"_index":327,"title":{"classes/StorageItem.html":{}},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"coverage.html":{}}}],["storagestatu",{"_index":170,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["storagestatus.valid",{"_index":231,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["storedobj",{"_index":228,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["storedobj.statu",{"_index":230,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["stream",{"_index":19,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["streamurl",{"_index":13,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["super(cli",{"_index":250,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["switch",{"_index":503,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["t",{"_index":96,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["tabl",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["text",{"_index":75,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["then((valu",{"_index":411,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["then(json",{"_index":507,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["then(r",{"_index":497,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this._concurr",{"_index":397,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.length",{"_index":399,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.push",{"_index":404,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this._queue.shift",{"_index":408,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.accesstoken",{"_index":472,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.anim",{"_index":295,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.animalgener",{"_index":251,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.animals.get(1",{"_index":298,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.buildresource(baseapiurl",{"_index":481,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.client",{"_index":201,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.buildurl(this.path",{"_index":196,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.callapi",{"_index":215,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.callapi(this.modelurl",{"_index":269,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.callapi(url",{"_index":302,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.domain",{"_index":299,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.queue.add",{"_index":260,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.client.setaccesstoken(json.accesstoken",{"_index":307,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.config.credientals.clientid",{"_index":303,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.config.credientals.clientsecret",{"_index":304,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.config.domain",{"_index":277,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.currentanim",{"_index":281,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.dequeu",{"_index":406,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.domain",{"_index":471,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.domain}api/${(apivers",{"_index":479,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.getall(param",{"_index":247,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.head",{"_index":496,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.isauth",{"_index":473,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.keygenerator(id",{"_index":227,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.login",{"_index":297,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.maxqueu",{"_index":396,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.menuitem",{"_index":288,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.model",{"_index":197,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.modelurl",{"_index":216,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.modelurl}/${id",{"_index":238,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.model}/${id",{"_index":237,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.month",{"_index":293,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.opt",{"_index":202,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.cach",{"_index":218,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.defaultsort",{"_index":214,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.keygener",{"_index":204,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.keygenerator(id",{"_index":205,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.pathgener",{"_index":198,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.options.pathgenerator(this.model",{"_index":199,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.pag",{"_index":286,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.pendingcount",{"_index":407,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["this.quest",{"_index":291,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["this.queue.add",{"_index":483,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tocamelcase(obj[d",{"_index":467,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["this.tosnakecase(obj[d",{"_index":470,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["time",{"_index":53,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["timestamp",{"_index":100,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["titl",{"_index":42,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["tocamelcas",{"_index":429,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tocamelcase(obj",{"_index":450,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["token",{"_index":449,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecas",{"_index":430,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["tosnakecase(obj",{"_index":453,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["total",{"_index":91,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["tri",{"_index":409,"title":{},"body":{"classes/Queue.html":{},"classes/QueueEntry.html":{}}}],["true",{"_index":285,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["ts",{"_index":578,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":457,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["updat",{"_index":57,"title":{"interfaces/Updatable.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["updatable.id",{"_index":343,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatables.foreach(updat",{"_index":341,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{}}}],["updatedat",{"_index":58,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"interfaces/UrlParams.html":{}}}],["url",{"_index":20,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"classes/RailsApiClient.html":{},"interfaces/UrlParams.html":{}}}],["urlparam",{"_index":104,"title":{"interfaces/UrlParams.html":{}},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"coverage.html":{}}}],["url}/${model}${id",{"_index":482,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["us",{"_index":32,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"injectables/AnimalSDKService.html":{},"interfaces/AnimalSdkConfig.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"interfaces/Month.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"classes/PageService.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"classes/QuestionService.html":{},"interfaces/UrlParams.html":{},"index.html":{}}}],["user",{"_index":78,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["usevalu",{"_index":137,"title":{},"body":{"modules/AnimalSDKModule.html":{}}}],["v1",{"_index":480,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["val",{"_index":489,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["valid",{"_index":336,"title":{},"body":{"classes/ApiStorage.html":{},"classes/StorageItem.html":{},"interfaces/Updatable.html":{},"miscellaneous/enumerations.html":{}}}],["valu",{"_index":318,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":542,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":63,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["videourl",{"_index":64,"title":{},"body":{"interfaces/Animal.html":{},"interfaces/AnimalApiCredentials.html":{},"interfaces/AnimalSdkConfig.html":{},"interfaces/AskQuestion.html":{},"interfaces/BasicMonth.html":{},"interfaces/BasicPage.html":{},"interfaces/Identifiable.html":{},"interfaces/MenuItem.html":{},"interfaces/Month.html":{},"interfaces/Page.html":{},"interfaces/PageImage.html":{},"interfaces/PagingInfo.html":{},"interfaces/PagingMeta.html":{},"interfaces/Question.html":{},"interfaces/UrlParams.html":{}}}],["void",{"_index":154,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/ApiStorage.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/QueueEntry.html":{},"classes/RailsApiClient.html":{}}}],["whether",{"_index":176,"title":{},"body":{"injectables/AnimalSDKService.html":{},"classes/AnimalService.html":{},"interfaces/AnimalServiceOptions.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"interfaces/ModelServiceOptions.html":{},"classes/MonthService.html":{},"interfaces/MonthServiceOptions.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{}}}],["ye",{"_index":316,"title":{},"body":{"classes/AnimalService.html":{},"classes/MenuItemService.html":{},"classes/ModelService.html":{},"classes/MonthService.html":{},"classes/PageService.html":{},"classes/QuestionService.html":{},"classes/Queue.html":{},"classes/RailsApiClient.html":{}}}],["z])/).join('_').tolowercas",{"_index":469,"title":{},"body":{"classes/RailsApiClient.html":{}}}],["zoom",{"_index":589,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Animal.html":{"url":"interfaces/Animal.html","title":"interface - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        conceivedOn\n                                \n                                \n                                        name\n                                \n                                \n                                        streamUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conceivedOn\n                                    \n                                \n                                \n                                    \n                                        conceivedOn:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the animal got pregenant.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animals name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamUrl\n                                    \n                                \n                                \n                                    \n                                        streamUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animals stream url.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalApiCredentials.html":{"url":"interfaces/AnimalApiCredentials.html","title":"interface - AnimalApiCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalApiCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client identifier of oauth application.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client secret of oauth application.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalSDKModule.html":{"url":"modules/AnimalSDKModule.html","title":"module - AnimalSDKModule","body":"\n                   \n\n\n\n\n  Modules\n  AnimalSDKModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/index.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnimalSDKService, AnimalSdkConfigService } from './animal-sdk.service';\nimport { AnimalSdkConfig } from './animal-sdk.models';\n// import { SampleComponent } from './sample.component';\n// import { SampleDirective } from './sample.directive';\n// import { SamplePipe } from './sample.pipe';\n// import { SampleService } from './sample.service';\n\n// export * from './sample.component';\n// export * from './sample.directive';\n// export * from './sample.pipe';\n// export * from './sample.service';\n\nexport * from './animal-sdk.models';\nexport * from './animal-sdk.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ],\n  exports: [\n    // SampleComponent,\n    // SampleDirective,\n    // SamplePipe\n  ]\n})\nexport class AnimalSDKModule {\n  static forRoot(config: AnimalSdkConfig): ModuleWithProviders {\n    return {\n      ngModule: AnimalSDKModule,\n      providers: [\n        AnimalSDKService,\n        {\n          provide: AnimalSdkConfigService,\n          useValue: config\n        }]\n      // providers: [SampleService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalSDKService.html":{"url":"injectables/AnimalSDKService.html","title":"injectable - AnimalSDKService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AnimalSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animals\n                            \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Private\n                                currentAnimal\n                            \n                            \n                                    Public\n                                menuItems\n                            \n                            \n                                    Public\n                                months\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Public\n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalSdkConfig)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:194\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AnimalSdkConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            animals\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animals:     AnimalService\n\n                    \n                \n                    \n                        \n                            Type :     AnimalService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:194\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:188\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentAnimal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentAnimal:     Animal\n\n                    \n                \n                    \n                        \n                            Type :     Animal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:189\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuItems:     MenuItemService\n\n                    \n                \n                    \n                        \n                            Type :     MenuItemService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:192\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            months\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        months:     MonthService\n\n                    \n                \n                    \n                        \n                            Type :     MonthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:191\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     PageService\n\n                    \n                \n                    \n                        \n                            Type :     PageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:190\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     QuestionService\n\n                    \n                \n                    \n                        \n                            Type :     QuestionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:193\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalSdkConfig.html":{"url":"interfaces/AnimalSdkConfig.html","title":"interface - AnimalSdkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalSdkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        credientals\n                                \n                                \n                                        domain\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credientals\n                                    \n                                \n                                \n                                    \n                                        credientals:     AnimalApiCredentials\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AnimalApiCredentials\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The client credientals used when connecting to API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The domain that the SDK should use in API calls.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalService.html":{"url":"classes/AnimalService.html","title":"class - AnimalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGenerator\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: RailsApiClient, model: string, options: MonthServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:171\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    RailsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    MonthServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGenerator:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:171\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        current()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalServiceOptions.html":{"url":"interfaces/AnimalServiceOptions.html","title":"interface - AnimalServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AnimalServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MonthServiceOptions\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiStorage.html":{"url":"classes/ApiStorage.html","title":"class - ApiStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                    Static\n                                getKey\n                            \n                            \n                                    Static\n                                process\n                            \n                            \n                                    Static\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StorageItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getKey(model: string, id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            process\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        process(updatables: [Updatable])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updatables\n                                                        \n                                                                    [Updatable]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(key: string, object: StorageItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/api-storage.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        object\n                                                        \n                                                                    StorageItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}/${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AskQuestion.html":{"url":"interfaces/AskQuestion.html","title":"interface - AskQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AskQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        text\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicMonth.html":{"url":"interfaces/BasicMonth.html","title":"interface - BasicMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        page\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The month number \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     BasicPage\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BasicPage\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Basic Page Information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp of the last time either the month or the page was updated. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicPage.html":{"url":"interfaces/BasicPage.html","title":"interface - BasicPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BasicPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        description\n                                \n                                \n                                        imageUrls\n                                \n                                \n                                        pageType\n                                \n                                \n                                        title\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page body.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time this page was created.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page description.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrls\n                                    \n                                \n                                \n                                    \n                                        imageUrls:     [PageImage]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [PageImage]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of images associated with this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageType\n                                    \n                                \n                                \n                                    \n                                        pageType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of page.\n\"log\", \"month\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page title.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last time this page was updated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Identifiable.html":{"url":"interfaces/Identifiable.html","title":"interface - Identifiable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Identifiable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model Identifier\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        pageId\n                                \n                                \n                                        position\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageId\n                                    \n                                \n                                \n                                    \n                                        pageId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page identifier this menu item should go to. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                    \n                                \n                                \n                                    \n                                        position:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position on the menu item in the side bar. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuItemService.html":{"url":"classes/MenuItemService.html","title":"class - MenuItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelService.html":{"url":"classes/ModelService.html","title":"class - ModelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: RailsApiClient, model: string, options: ModelServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    RailsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    ModelServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        camelModel\n                    \n                \n\n                \n                    \n                        getcamelModel()\n                    \n                \n                            \n                                \n                                    Defined in src/animal-sdk.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelUrl\n                    \n                \n\n                \n                    \n                        getmodelUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/animal-sdk.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in src/animal-sdk.service.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelServiceOptions.html":{"url":"interfaces/ModelServiceOptions.html","title":"interface - ModelServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        defaultSort\n                                \n                                \n                                            Optional\n                                        keyGenerator\n                                \n                                \n                                            Optional\n                                        pathGenerator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the service should use caching. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultSort\n                                    \n                                \n                                \n                                    \n                                        defaultSort:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The default sort string. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyGenerator\n                                    \n                                \n                                \n                                    \n                                        keyGenerator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A function that generators the key that will be used in ApiStorage when cache is ON. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathGenerator\n                                    \n                                \n                                \n                                    \n                                        pathGenerator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A function that generators the path using the model \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Month.html":{"url":"interfaces/Month.html","title":"interface - Month","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Month\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicMonth\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalId\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalId\n                                    \n                                \n                                \n                                    \n                                        animalId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The animal identifier this Month is for. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the month (This will override the page title) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MonthService.html":{"url":"classes/MonthService.html","title":"class - MonthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MonthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animalGenerator\n                            \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Public\n                                getAllOrdered\n                            \n                            \n                                    Private\n                                monthDiff\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: RailsApiClient, model: string, options: MonthServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in src/animal-sdk.service.ts:112\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    RailsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    MonthServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animalGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animalGenerator:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        current()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Returns the current Month which the animal is in its pregnancy.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllOrdered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllOrdered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:141\n                            \n                        \n\n\n                \n                    \n                            Get all months in order by month number.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                The url params.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            monthDiff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        monthDiff(d1: Date, d2: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d1\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        d2\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonthServiceOptions.html":{"url":"interfaces/MonthServiceOptions.html","title":"interface - MonthServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonthServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelServiceOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animalGenerator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animalGenerator\n                                    \n                                \n                                \n                                    \n                                        animalGenerator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A function that generators a Animal \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Page.html":{"url":"interfaces/Page.html","title":"interface - Page","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BasicPage\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        moreInfoUrl\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        videoUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moreInfoUrl\n                                    \n                                \n                                \n                                    \n                                        moreInfoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to more information about this page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The page status.\n\"draft\", \"published\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoUrl\n                                    \n                                \n                                \n                                    \n                                        videoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A link to a video associated with this page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageImage.html":{"url":"interfaces/PageImage.html","title":"interface - PageImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Image's filename.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url to the image.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageService.html":{"url":"classes/PageService.html","title":"class - PageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllPublished\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllPublished\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllPublished(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Get all the published log pages.\naka search = 'status=1,page_type=log'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingInfo.html":{"url":"interfaces/PagingInfo.html","title":"interface - PagingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        meta\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     [T]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [T]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Items in the page.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                    \n                                \n                                \n                                    \n                                        meta:     PagingMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PagingMeta\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Paging information used when paginating.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PagingMeta.html":{"url":"interfaces/PagingMeta.html","title":"interface - PagingMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PagingMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n            \n                Description\n            \n            \n                Models used for pagination. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pageCount\n                                \n                                \n                                        pageSize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                    \n                                \n                                \n                                    \n                                        pageCount:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of total pages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of items per page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Identifiable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        respondedById\n                                \n                                \n                                        response\n                                \n                                \n                                        status\n                                \n                                \n                                        text\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was created. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The email of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The full name of the person who asked the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        respondedById\n                                    \n                                \n                                \n                                    \n                                        respondedById:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user id of the person who responsed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                    \n                                \n                                \n                                    \n                                        response:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The response to the question. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the question\n\"asked\", \"answered\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The question that was asked. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date the question was updated \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionService.html":{"url":"classes/QuestionService.html","title":"class - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ModelService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                client\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ask\n                            \n                            \n                                    Public\n                                getAllAnswered\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Private\n                                keyGenerator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client:     RailsApiClient\n\n                    \n                \n                    \n                        \n                            Type :     RailsApiClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ask\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ask(question: AskQuestion)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:162\n                            \n                        \n\n\n                \n                    \n                            Create a question with no answer.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        question\n                                                        \n                                                                    AskQuestion\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Object used to create a question.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAllAnswered\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAllAnswered(params: UrlParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/animal-sdk.service.ts:153\n                            \n                        \n\n\n                \n                    \n                            Get only answered Questions.\naka search = 'response != nil'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20, search: null }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(id: number, internal?: (json?: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:72\n                            \n                        \n\n\n                \n                    \n                            Get an object by identifier.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The model identifier\n\n                                                        \n                                                \n                                                \n                                                        internal\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAll\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAll(params: UrlParams)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:55\n                            \n                        \n\n\n                \n                    \n                            Get all for objects for this model.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    UrlParams\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                { pageNum: 1, pageSize: 20 }\n                                                        \n\n                                                        \n                                                                url parameters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        keyGenerator(id: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ModelService\n\n                                \n                            \n                        \n                            \n                                    Defined in ModelService:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Inject } from '@angular/core';\nimport {\n    AnimalSdkConfig, Page, PagingInfo, Question, BasicPage, Animal,\n    AskQuestion, MenuItem, BasicMonth, UrlParams, Month\n} from './animal-sdk.models';\nimport { RailsApiClient } from './rails-api-client';\nimport { ApiStorage, StorageStatus } from './api-storage';\n\nexport const AnimalSdkConfigService = new InjectionToken('AnimalSdkConfig');\n\nexport interface ModelServiceOptions {\n    /** Whether or not the service should use caching. */\n    cache: boolean;\n    /** The default sort string. */\n    defaultSort: string;\n    /** A function that generators the path using the model */\n    pathGenerator?: (model: string) => string;\n    /** A function that generators the key that will be used in ApiStorage when cache is ON. */\n    keyGenerator?: (id: number) => string;\n}\n\nconst defaultOptions: ModelServiceOptions = { cache: false, defaultSort: 'created_at desc' };\n\nexport class ModelService {\n    client: RailsApiClient;\n    model: string;\n    protected get camelModel() {\n        return RailsApiClient.toCamelCase(this.model);\n    }\n    protected get modelUrl() {\n        return this.client.buildUrl(this.path);\n    }\n    protected get path() {\n        let path = this.model;\n        if (this.options.pathGenerator) {\n            path = this.options.pathGenerator(this.model);\n        }\n        return path;\n    }\n    options: ModelServiceOptions;\n\n    constructor(client: RailsApiClient, model: string, options: ModelServiceOptions = defaultOptions) {\n        this.client = client;\n        this.model = model;\n        this.options = options;\n    }\n\n    private keyGenerator(id: number): string {\n        return this.options.keyGenerator ? this.options.keyGenerator(id) : ApiStorage.getKey(this.path, id);\n    }\n    /**\n     *  Get all for objects for this model.\n     * @param params url parameters\n     */\n    public getAll(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.sort = params.sort || this.options.defaultSort;\n        return this.client.callApi(() => this.modelUrl, 'GET',\n            params).then(res => {\n                if (this.options.cache) {\n                    ApiStorage.process(res[this.camelModel].map(p => {\n                        return { id: p.id, model: this.model, updatedAt: p.updatedAt };\n                    }));\n                }\n                return { items: res[this.camelModel], meta: res.meta };\n            });\n    }\n\n    /**\n     * Get an object by identifier.\n     * @param id The model identifier\n     */\n    public get(id: number, internal?: (json: any) => void): Promise {\n        const key = this.keyGenerator(id);\n        const storedObj = ApiStorage.get(key);\n\n        if (this.options.cache && storedObj && storedObj.status === StorageStatus.valid) {\n            console.log(`Returning cached ${this.model}:`, storedObj);\n            return new Promise((res) => {\n                if (internal) { internal(storedObj.item); }\n                return res(storedObj.item);\n            });\n        } else {\n            console.log(`Fetching ${this.model}/${id}`);\n            return this.client.callApi(() => `${this.modelUrl}/${id}`, 'GET', null, json => {\n                if (internal) { internal(json); }\n                if (this.options.cache) {\n                    ApiStorage.set(key, { item: json, status: StorageStatus.valid, updatedAt: json.updatedAt });\n                }\n            });\n        }\n    }\n}\n\nexport class PageService extends ModelService {\n    /**\n     * Get all the published log pages.\n     * aka search = 'status=1,page_type=log'\n     * @param params url parameters\n     */\n    public getAllPublished(params: UrlParams = { pageNum: 1, pageSize: 20 }): Promise> {\n        params.search = 'status=1,page_type=log';\n        return this.getAll(params);\n    }\n}\n\nexport interface MonthServiceOptions extends ModelServiceOptions {\n    /** A function that generators a Animal */\n    animalGenerator: () => Animal;\n}\n\nexport class MonthService extends ModelService {\n    animalGenerator: () => Animal;\n\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    private monthDiff(d1: Date, d2: Date): number {\n        let months = (d2.getFullYear() - d1.getFullYear()) * 12;\n        months -= d1.getMonth() + 1;\n        months += d2.getMonth();\n        return months  {\n        return this.client.queue.add(() => {\n            return new Promise((res) => {\n                res(this.monthDiff(new Date(this.animalGenerator().conceivedOn), new Date()) + 1);\n            });\n        });\n    }\n\n    /**\n     * Get all months in order by month number.\n     * @param params The url params.\n     */\n    public getAllOrdered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }): Promise> {\n        params.sort = 'number asc';\n        return this.getAll(params);\n    }\n}\n\nexport class QuestionService extends ModelService {\n    /**\n     * Get only answered Questions.\n     * aka search = 'response != nil'\n     * @param params url parameters\n     */\n    public getAllAnswered(params: UrlParams = { pageNum: 1, pageSize: 20, search: null }) {\n        params.search = 'response != nil';\n        return this.getAll(params);\n    }\n\n    /**\n     * Create a question with no answer.\n     * @param question Object used to create a question.\n     */\n    public ask(question: AskQuestion): Promise {\n        return this.client.callApi(this.modelUrl, 'POST', { question });\n    }\n}\n\nexport class MenuItemService extends ModelService { }\n\nexport interface AnimalServiceOptions extends MonthServiceOptions { }\nexport class AnimalService extends ModelService {\n    animalGenerator: () => Animal;\n    constructor(client: RailsApiClient, model: string, options: MonthServiceOptions) {\n        super(client, model, options);\n        this.animalGenerator = options.animalGenerator;\n    }\n\n    public current(): Promise {\n        return this.client.queue.add(() => {\n            return new Promise(res => {\n                return res(this.animalGenerator());\n            });\n        });\n    }\n}\n\n@Injectable()\nexport class AnimalSDKService {\n    protected client: RailsApiClient;\n    private currentAnimal: Animal;\n    public pages: PageService;\n    public months: MonthService;\n    public menuItems: MenuItemService;\n    public questions: QuestionService;\n    public animals: AnimalService;\n\n    constructor(@Inject(AnimalSdkConfigService) private config: AnimalSdkConfig) {\n        console.log('Connecting to Animal Api: ', this.config.domain);\n        this.client = new RailsApiClient(config.domain);\n        const sortByCreated = 'created_at desc';\n        const animalGen = () => this.currentAnimal;\n        const animalPathGen = (model: string) => {\n            return `animals/${this.currentAnimal.id}/${model}`;\n        };\n        const nestedOptions: ModelServiceOptions = {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen\n        };\n        this.pages = new PageService(this.client, 'pages', nestedOptions);\n        this.menuItems = new MenuItemService(this.client, 'menu_items', nestedOptions);\n        this.questions = new QuestionService(this.client, 'questions', nestedOptions);\n\n        this.months = new MonthService(this.client, 'months', {\n            cache: true,\n            defaultSort: sortByCreated,\n            pathGenerator: animalPathGen,\n            animalGenerator: animalGen\n        });\n\n        this.animals = new AnimalService(this.client, 'animals', {\n            cache: false,\n            defaultSort: sortByCreated,\n            animalGenerator: animalGen\n        });\n\n        this.login();\n        this.animals.get(1, animal => {\n            this.currentAnimal = animal;\n        });\n    }\n\n    private login() {\n        const url = this.client.domain + 'oauth/token';\n        console.log('Logging In');\n        this.client.callApi(url, 'POST', {\n            clientId: this.config.credientals.clientId,\n            clientSecret: this.config.credientals.clientSecret,\n            grantType: 'client_credentials'\n        }, json => {\n            this.client.setAccessToken(json.accessToken);\n            return json;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Queue.html":{"url":"classes/Queue.html","title":"class - Queue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Queue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _concurrency\n                            \n                            \n                                _idCount\n                            \n                            \n                                _queue\n                            \n                            \n                                maxQueue\n                            \n                            \n                                pendingCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Private\n                                dequeue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(maxQueue: number, concurrency?: number)\n                    \n                \n                        \n                            \n                                Defined in src/queue.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        maxQueue\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        concurrency\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _concurrency\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _concurrency:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _idCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _idCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxQueue:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pendingCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pendingCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        add(promiseGenerator: () => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promiseGenerator\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dequeue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dequeue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/queue.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n        return new Promise((res, rej) => {\n            if (this._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            this._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            this.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            this.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    this.pendingCount--;\n                    this.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    this.pendingCount--;\n                    this.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            this.pendingCount--;\n            this.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueueEntry.html":{"url":"classes/QueueEntry.html","title":"class - QueueEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueueEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/queue.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                promiseGenerator\n                            \n                            \n                                reject\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promiseGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseGenerator:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reject:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resolve:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/queue.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class QueueEntry {\n    promiseGenerator: () => Promise;\n    resolve: (value?: any) => void;\n    reject: (reason?: any) => void;\n}\n\nexport class Queue {\n    maxQueue: number;\n    _queue = new Array();\n    _idCount = 0;\n    _concurrency: number;\n    pendingCount = 0;\n    constructor(maxQueue: number, concurrency?: number) {\n        this.maxQueue = maxQueue;\n        this._concurrency = concurrency || 1;\n    }\n\n    public add(promiseGenerator: () => Promise): Promise {\n        return new Promise((res, rej) => {\n            if (this._queue.length >= this.maxQueue) {\n                rej(new Error('Queue limit reached'));\n            }\n\n            this._queue.push({\n                promiseGenerator: promiseGenerator,\n                resolve: res,\n                reject: rej\n            });\n\n            this.dequeue();\n        });\n    }\n\n    private dequeue(): boolean {\n        if (this.pendingCount >= this._concurrency) {\n            return false;\n        }\n\n        const item = this._queue.shift();\n        if (!item) {\n            return false;\n        }\n\n        try {\n            this.pendingCount++;\n            Promise.resolve(item.promiseGenerator())\n                .then((value) => {\n                    item.resolve(value);\n                    this.pendingCount--;\n                    this.dequeue();\n                }).catch(err => {\n                    item.reject(err);\n                    this.pendingCount--;\n                    this.dequeue();\n                });\n        } catch (err) {\n            item.reject(err);\n            this.pendingCount--;\n            this.dequeue();\n        }\n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RailsApiClient.html":{"url":"classes/RailsApiClient.html","title":"class - RailsApiClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RailsApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rails-api-client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                accessToken\n                            \n                            \n                                    Public\n                                domain\n                            \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildResource\n                            \n                            \n                                    Public\n                                buildUrl\n                            \n                            \n                                    Public\n                                callApi\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                            \n                                    Static\n                                toCamelCase\n                            \n                            \n                                    Static\n                                toSnakeCase\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(domain: string)\n                    \n                \n                        \n                            \n                                Defined in src/rails-api-client.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        domain\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            domain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        domain:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isAuth:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            queue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queue:     \n\n                    \n                \n                    \n                        \n                            Default value : new Queue(Infinity)\n                        \n                    \n                        \n                            \n                                    Defined in src/rails-api-client.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildResource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildResource(url: string, model: string, id: number | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            buildUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        buildUrl(model: string, id?: number, apiVersion?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        apiVersion\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            callApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        callApi(url: string | , method: string, params: any, then: (value: any) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string | \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        then\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                (value?: any) => { }\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        headers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HeadersInit\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toCamelCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toCamelCase(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            toSnakeCase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toSnakeCase(obj: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/rails-api-client.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Queue } from './queue';\n\nexport class RailsApiClient {\n    public domain: string;\n    public isAuth = false;\n    private accessToken: string;\n    public queue = new Queue(Infinity);\n\n    public static toCamelCase(obj: any): any {\n        let newObj = {};\n        if (typeof obj === 'string') {\n            return obj.replace(/(\\_\\w)/g, (k) => {\n                return k[1].toUpperCase();\n            });\n        }\n        if (Array.isArray(obj)) {\n            newObj = [];\n        }\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.replace(/(\\_\\w)/g, (k) => {\n                        return k[1].toUpperCase();\n                    })] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toCamelCase(obj[d]);\n                }\n                newObj[d.replace(/(\\_\\w)/g, (k) => {\n                    return k[1].toUpperCase();\n                })] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    public static toSnakeCase(obj: {}): any {\n        const newObj = {};\n\n        for (const d in obj) {\n            if (obj.hasOwnProperty(d)) {\n                if (obj[d] == null) {\n                    newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = null;\n                    continue;\n                }\n                if (typeof obj[d] === 'object') {\n                    obj[d] = this.toSnakeCase(obj[d]);\n                }\n                newObj[d.split(/(?=[A-Z])/).join('_').toLowerCase()] = obj[d];\n            }\n        }\n        return newObj;\n    }\n\n    constructor(domain: string) {\n        this.domain = domain;\n    }\n\n    public setAccessToken(token: string) {\n        this.accessToken = token;\n        this.isAuth = true;\n    }\n\n    private headers(): HeadersInit {\n        const headers: { [key: string]: string } = {\n            'Content-Type': 'application/json'\n        };\n\n        if (this.isAuth) {\n            headers['Authorization'] = `Bearer ${this.accessToken}`;\n        }\n\n        return headers;\n    }\n\n    public buildUrl(model: string, id?: number, apiVersion?: string): string {\n        const baseApiUrl = `${this.domain}api/${(apiVersion || 'v1')}`;\n        return this.buildResource(baseApiUrl, model, id);\n    }\n\n    public buildResource(url: string, model: string, id: number | null = null): string {\n        return `${url}/${model}${id != null ? ('/' + id) : ''}`;\n    }\n\n    public callApi(url: string | (() => string),\n        method: string,\n        params: any = null,\n        then: (value?: any) => void = (value?: any) => { }): Promise {\n\n        return this.queue.add(() => {\n            let jsonBody: string = null;\n            let fullUrl = url;\n            if (typeof fullUrl === 'function') {\n                fullUrl = fullUrl();\n            }\n            if (method === 'GET') {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n\n                    const query = Object.keys(params).map(key => {\n                        const val = params[key];\n                        if (!val) {\n                            return null;\n                        }\n                        return `${key}=${params[key]}`;\n                    }).filter(val => val != null).join('&');\n                    fullUrl += '?' + query;\n                }\n            } else {\n                if (params) {\n                    params = RailsApiClient.toSnakeCase(params);\n                    jsonBody = JSON.stringify(params);\n                }\n            }\n            return fetch(fullUrl, {\n                body: jsonBody,\n                headers: this.headers(),\n                method,\n            }).then(res => {\n                console.log(`${fullUrl} Response:`, res);\n                return res.json().then(json => {\n                    const camelJson = RailsApiClient.toCamelCase(json);\n                    camelJson._res = res;\n                    switch (true) {\n                        case (res.status >= 200 && res.status  {\n                then(json);\n                return json;\n            });\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageItem.html":{"url":"classes/StorageItem.html","title":"class - StorageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     T\n\n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     StorageStatus\n\n                    \n                \n                    \n                        \n                            Type :     StorageStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatedAt:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/api-storage.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}/${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Updatable.html":{"url":"interfaces/Updatable.html","title":"interface - Updatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Updatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api-storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        model\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum StorageStatus {\n    invalid, valid\n}\n\nexport class StorageItem {\n    item: T;\n    updatedAt: string;\n    status: StorageStatus;\n}\n\nexport interface Updatable {\n    id: number;\n    model: string;\n    updatedAt: string;\n}\n\nexport class ApiStorage {\n    public static getKey(model: string, id: number): string {\n        return `${model}/${id}`;\n    }\n    public static set(key: string, object: StorageItem) {\n        localStorage.setItem(key, JSON.stringify(object));\n    }\n\n    public static get(key: string): StorageItem {\n        return JSON.parse(localStorage.getItem(key));\n    }\n\n    public static process(updatables: [Updatable]) {\n        updatables.forEach(updatable => {\n            const key = ApiStorage.getKey(updatable.model, updatable.id);\n            const storedObj = ApiStorage.get(key);\n            if (storedObj != null && new Date(storedObj.updatedAt) \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UrlParams.html":{"url":"interfaces/UrlParams.html","title":"interface - UrlParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UrlParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/animal-sdk.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pageNum\n                                \n                                \n                                            Optional\n                                        pageSize\n                                \n                                \n                                            Optional\n                                        search\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pageNum\n                                    \n                                \n                                \n                                    \n                                        pageNum:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                    \n                                \n                                \n                                    \n                                        pageSize:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                    \n                                \n                                \n                                    \n                                        search:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AnimalApiCredentials {\n    /**\n     * The client identifier of oauth application.\n     */\n    clientId: string;\n    /**\n     * The client secret of oauth application.\n     */\n    clientSecret: string;\n}\n\nexport interface AnimalSdkConfig {\n    /**\n     * The domain that the SDK should use in API calls.\n     */\n    domain: string;\n    /**\n     * The client credientals used when connecting to API.\n     */\n    credientals: AnimalApiCredentials;\n}\n\nexport interface Identifiable {\n    /**\n     * Model Identifier\n     */\n    id: number;\n}\n\nexport interface Animal extends Identifiable {\n    /**\n     * The animals name.\n     */\n    name: string;\n    /**\n     * The date the animal got pregenant.\n     */\n    conceivedOn: string;\n    /**\n     * The animals stream url.\n     */\n    streamUrl: string;\n}\n\n/***************\n * Page Models\n ***************/\nexport interface BasicPage extends Identifiable {\n    /**\n     * The page title.\n     */\n    title: string;\n    /**\n     * The page description.\n     */\n    description: string;\n    /**\n     * The page body.\n     */\n    body: string;\n    /**\n     * The type of page.\n     * \"log\", \"month\"\n     */\n    pageType: string;\n    /**\n     * An array of images associated with this page.\n     */\n    imageUrls: [PageImage];\n    /**\n     * The time this page was created.\n     */\n    createdAt: string;\n    /**\n     * The last time this page was updated.\n     */\n    updatedAt: string;\n}\n\nexport interface Page extends BasicPage {\n    /**\n     * The page status.\n     * \"draft\", \"published\"\n     */\n    status: string;\n    /**\n     * A link to a video associated with this page.\n     */\n    videoUrl?: string;\n    /**\n     * A link to more information about this page.\n     */\n    moreInfoUrl?: string;\n}\n\n\nexport interface PageImage extends Identifiable {\n    /**\n     * Url to the image.\n     */\n    url: string;\n    /**\n     * Image's filename.\n     */\n    filename: string;\n}\n\n/*****************\n * Question Models\n *****************/\nexport interface Question extends Identifiable {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n    /** The status of the question\n     *  \"asked\", \"answered\"\n     */\n    status: string;\n    /** The response to the question. */\n    response: string;\n    /** The user id of the person who responsed. */\n    respondedById: number;\n    /** The date the question was created. */\n    createdAt: string;\n    /** The date the question was updated */\n    updatedAt: string;\n}\n\nexport interface AskQuestion {\n    /** The full name of the person who asked the question. */\n    name: string;\n    /** The email of the person who asked the question. */\n    email: string;\n    /** The question that was asked. */\n    text: string;\n}\n\n/********************\n *  Menu Item Models\n ********************/\n\nexport interface MenuItem extends Identifiable {\n    /** The page identifier this menu item should go to. */\n    pageId: number;\n    /** The position on the menu item in the side bar. */\n    position: number;\n    /** The name of the menu item. */\n    name: string;\n}\n\n/******************\n *  Paging Models\n ******************/\n/** Models used for pagination. */\n\nexport interface PagingMeta {\n    /**\n     * The number of total pages.\n     */\n    pageCount: number;\n    /**\n     * The number of items per page.\n     */\n    pageSize: number;\n}\n\nexport interface PagingInfo {\n    /**\n     * Items in the page.\n     */\n    items: [T];\n    /**\n     * Paging information used when paginating.\n     */\n    meta: PagingMeta;\n}\n\n/*********\n * Month\n *********/\nexport interface BasicMonth extends Identifiable {\n    /** The month number */\n    number: number;\n    /** Basic Page Information */\n    page: BasicPage;\n    /** Timestamp of the last time either the month or the page was updated. */\n    updatedAt: string;\n}\n\nexport interface Month extends BasicMonth {\n    /** The name of the month (This will override the page title) */\n    name: string;\n    /** The animal identifier this Month is for. */\n    animalId: number;\n}\n\n\n/*********\n * Others\n *********/\n\nexport interface UrlParams {\n    pageNum?: number;\n    pageSize?: number;\n    search?: string;\n    sort?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Animal\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalApiCredentials\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AnimalSdkConfig\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                AskQuestion\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicMonth\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                BasicPage\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Identifiable\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                MenuItem\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Month\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Page\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PageImage\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingInfo\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                PagingMeta\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                Question\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.models.ts\n            \n            \n                interface\n            \n            \n                UrlParams\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                AnimalService\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                MenuItemService\n            \n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                ModelService\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                MonthService\n            \n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                PageService\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                class\n            \n            \n                QuestionService\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                injectable\n            \n            \n                AnimalSDKService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                interface\n            \n            \n                AnimalServiceOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                interface\n            \n            \n                ModelServiceOptions\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                interface\n            \n            \n                MonthServiceOptions\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                variable\n            \n            \n                AnimalSdkConfigService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/animal-sdk.service.ts\n            \n            \n                variable\n            \n            \n                defaultOptions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                ApiStorage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                class\n            \n            \n                StorageItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/api-storage.ts\n            \n            \n                interface\n            \n            \n                Updatable\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                Queue\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/queue.ts\n            \n            \n                class\n            \n            \n                QueueEntry\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/rails-api-client.ts\n            \n            \n                class\n            \n            \n                RailsApiClient\n            \n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StorageStatus   (src/.../api-storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api-storage.ts\n    \n        \n            \n                \n                    \n                        \n                        StorageStatus\n                    \n                \n                        \n                            \n                                 invalid\n                            \n                        \n                        \n                            \n                                 valid\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nanimal-sdk\nInstallation\nTo install this library, run:\n$ npm install animal-sdk --saveConsuming your library\nOnce you have published your library to npm, you can import your library in any Angular application by running:\n$ npm install animal-sdkand then from your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import your library\nimport { AnimalSDKModule } from 'animal-sdk';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    // Specify your library as an import\n    AnimalSDKModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Once your library is imported, you can use its components, directives and pipes in your Angular application:\n\n\n  {{title}}\n\nDevelopment\nTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo lint all *.ts files:\n$ npm run lintLicense\nMIT © Nicholas Mata\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalSDKModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalSdkConfigService   (src/.../animal-sdk.service.ts)\n                        \n                        \n                            defaultOptions   (src/.../animal-sdk.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/animal-sdk.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AnimalSdkConfigService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AnimalSdkConfigService:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('AnimalSdkConfig')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultOptions:     ModelServiceOptions\n\n                    \n                \n                    \n                        \n                            Type :     ModelServiceOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { cache: false, defaultSort: 'created_at desc' }\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
